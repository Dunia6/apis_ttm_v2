{"version":3,"sources":["packages/seatings/components/SeatConfig/index.tsx","packages/seatings/components/Cabine/index.tsx","packages/seatings/core/funct.ts","packages/seatings/containers/descriptions.tsx","packages/seatings/containers/main-places.tsx","packages/seatings/components/Trajet/index.tsx","packages/seatings/client.tsx","packages/seatings/index.ts","packages/seatings/core/index.ts","apps/clients/config.ts","apps/clients/providers/hooks.ts","apps/clients/providers/services/constants.ts","apps/clients/providers/services/steperReservation.ts","apps/clients/providers/services/tmpData.ts","apps/clients/providers/services/index.ts","apps/clients/providers/stores.ts","apps/clients/providers/theme.ts","apps/clients/providers/index.tsx","utils/assets/ttm_logo.png","apps/clients/components/appbar.tsx","apps/clients/containers/withappbar.tsx","utils/assets/gb1.jpg","apps/clients/containers/search.tsx","apps/clients/components/inputPassenger.tsx","utils/apis/graphql/queries_string.ts","apps/clients/components/inputCity.tsx","utils/apis/graphql/queries.ts","packages/ui/components/inputs/DateInput.tsx","apps/clients/components/searchVoyage.tsx","packages/ui/components/cards/BasicCardTravel.tsx","apps/clients/containers/voyages.tsx","apps/clients/containers/aboutCompany.tsx","apps/clients/containers/footers.tsx","apps/clients/components/ErrorLoaderContainer.tsx","apps/clients/pages/Home.tsx","apps/clients/containers/CardDetail.tsx","utils/apis/graphql/mutations_string.ts","utils/apis/graphql/mutation.ts","apps/clients/pages/Detail.tsx","apps/clients/components/ButtonNextPrevious.tsx","apps/clients/components/Personnal/PassengerInput.tsx","apps/clients/containers/stepRervations/context-reservations.tsx","apps/clients/containers/stepRervations/StepPassengerContainer.tsx","apps/clients/components/Payment/MobilBanking.tsx","apps/clients/components/Payment/index.tsx","apps/clients/components/PayementMode.tsx","apps/clients/components/CardCostDetail.tsx","apps/clients/containers/stepRervations/StepPaymentContainer.tsx","apps/clients/components/SeatPassgerSelection.tsx","apps/clients/containers/stepRervations/StepSeatContainer.tsx","apps/clients/components/DetailInfos.tsx","apps/clients/containers/stepRervations/StepInfoContainer.tsx","apps/clients/containers/stepRervations/StepContainer.tsx","apps/clients/pages/StepReservation.tsx","apps/clients/providers/utils.ts","apps/clients/pages/SearchResultJjourney.tsx","apps/clients/pages/Index.tsx","utils/provider/DateProvider.tsx","utils/config.ts","utils/provider/ApolloProvider.tsx","App.tsx","index.tsx","packages/seatings/core/context.ts","packages/seatings/components/SeatPlace/index.tsx"],"names":["SeatConfigProvider","children","React","SeatConfigReducer","intialStateSeatConfiguration","state","dispatch","dispatcher","e","Provider","value","Cabines","ref","user","actions","cabRef","SeatConfigContext","reservations","defaultReservation","devMod","clipboard","precomposition","selectedTrajet","x","handlerDispatch","values","current","allReservations","handlerAction","type","callback","data","seat","id","action","payload","onPress","console","log","exitSeat","ownReserve","inTrajet","alert","HeaderName","nt","parseInt","toString","left","right","map","i","index","Tr","n","trajet","list","getColors","result","desable","color","undefined","handlerClick","TDName","name","String","fromCharCode","disabled","info","modeDev","Array","from","keys","_","style","textAlign","padding","variant","sx","p","userTrajet","start","find","getComposition","precompostion","item","getDecomposition","y","precompData","push","filter","sort","a","b","SeatDescription","props","flexDirection","marginBottom","marginTop","DescriptionContainer","idConfigCab","clientActionButtonGroup","MainPlaceContainer","dataConfig","defaultConfiguration","display","justifyContent","IOSSlider","styled","Slider","theme","palette","mode","height","width","backgroundColor","border","boxShadow","lineHeight","fontSize","background","borderRadius","transformOrigin","transform","opacity","valuetext","Trajet","trajets","maxTrajet","length","handleChange","event","newValue","nStart","NEnd","oStart","oEnd","valueLabelDisplay","getAriaLabel","onChange","getAriaValueText","min","max","step","marks","valueLabelFormat","ClientPlaceReservations","configuration","SeatConfig","Grid","container","spacing","xs","Box","pl","pr","m","Typography","JOURNEY_URL","apis","axios","create","baseURL","useShallowEqualSelector","selector","useSelector","shallowEqual","useReservations","steperReservation","NEXT_STEP","PREVIOUS_STEP","GO_TO_STEP","INIT_STEP","SELECT_JOURNEY","SET_PASSENGER","SET_SESSION","RESET_RESERVATION","INITIAL_STATE","currentStep","maxStep","padSteper","company","journeySelected","passengers","sessionReservation","folderReservation","useSteperAction","useDispatch","goTo","useCallback","initialise","goNext","goPrivious","adults","babies","INIT_PASSENGER","SET_VALUE_PASSENGER","initPassengerArrayValue","adult","child","baby","reducers","combineReducers","selected","folder","session","tmpData","persistConfig","key","storage","whitelist","blacklist","pReducer","persistReducer","rootReducer","middleware","applyMiddleware","thunk","store","createStore","composeWithDevTools","persistor","persistStore","themeClient","createMuiTheme","primary","main","deepPurple","secondary","pink","themeClientWithFontSize","responsiveFontSizes","AppStateProvider","loading","ThemeClientProvider","ThemeProvider","CssBaseline","useStyles","makeStyles","createStyles","root","flexGrow","menuButton","marginRight","title","mt","imgLogo","CLientAppBar","forwardRef","classes","useState","setState","matches","useMediaMobile","AppBar","position","elevation","role","Container","maxWidth","Toolbar","paddingRight","paddingLeft","className","to","src","logoTtm","alt","IconButton","onClick","SwipeableDrawer","anchor","open","onClose","onOpen","useTheme","useMediaQuery","breakpoints","up","HideOnScroll","window","trigger","useScrollTrigger","target","Slide","appear","direction","in","Withappbar","Fragment","backgroundImage","bgImage","bg","paddingBottom","pt3","paddingTop","textShadow","SearchContainer","md","sm","paper","boxSizing","DataPassengers","label","description","init","initialState","reducer","preventNegatifpassager","OptionPassangerRender","_number","option","List","component","aria-labelledby","subheader","ListSubheader","ListItem","ListItemIcon","size","ListItemText","InputPassenger","initialValue","useReducer","useStateInputNumberPassager","useMemo","anchorEl","setAnchorEl","Boolean","numberPassanger","FormControlLabel","control","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","memo","TOWN_STRING","gql","DETAIL_JOURNEY","DETAIL_JOURNEY_SELECTED","JOURNEY_COMPANY_PRESENTATION_STRING","iconImg","flexWrap","alignContent","alignItems","OptionCityRender","code","town","InputCity","setOpen","options","setOptions","useQuery","handlerClose","handlerOpen","useEffect","Autocomplete","freeSolo","disableClearable","getOptionLabel","renderOption","renderInput","params","TextField","margin","InputProps","DateInput","memoizedValue","moment","format","selectedDate","setSelectedDate","fullWidth","disablePast","maxDate","minDate","helperText","date","handleDateChange","KeyboardButtonProps","fontWeight","SearchVoyage","history","useHistory","initialValues","dateDeparture","dateReturn","onlyDirect","InitialNumberPassenger","whereFrom","whreTo","Paper","onSubmit","setSubmitting","Querystr","stringifyUrl","url","query","setFieldValue","handleSubmit","d","Checkbox","checked","Button","disableElevation","BasicCardTravel","Card","minWidth","CardActionArea","CardContent","Stack","Chip","icon","hourDeparture","price","gutterBottom","routeNames","mb","busNumber","gridList","VoyagesListView","GridList","cellHeight","cols","voyages","GridListTile","devise","cars","codeAppareil","hoursDeparture","onClik","AboutCompany","FooterGlobal","ErrorLoaderContainer","error","HomeClientPage","variables","useGetCompanyJourneyPres","onSelectJourney","nom","journies","edges","node","ItemInfo","secondaryAction","value2","value1","InputNumberOfPassangerDetail","intialValues","innerRef","errors","CardDetailJourney","visable","setVisable","formikRef","CardMedia","image","img","top","marginLeft","routes","dense","rightInfo","leftInfo","SELECT_RESERVE_JOURNEY","DETAIL_INPUT_INFOS","INPUT_INFO_PASSENGER_STEP","useBaseMuation","useMutation","DetailPage","handlerSubmitMuation","match","detailDetail","detailLoading","names","join","journey","hoursReturn","configCab","numberOfSeats","numberOfPlacesReserved","isDirect","exprired","handlerSubmit","then","selectJourney","catch","CardDetail","button","ButtonNextPrevious","stepLenght","REQUIRED_MESSAGE","SchemasPassengerInput","yup","shape","firstname","required","middlename","lastname","gender","birthDay","PassengerInput","typeUser","keyId","enableReinitialize","validationSchema","select","MenuItem","lastStep","activeStep","selectedPassenger","journeySeats","StepReservationContext","StepReservationProvider","_value","setValue","setStep","createRefPassenger","rest","__typename","dateCreated","toLowerCase","StepPassengerContainer","handlerSubumitMut","getValuePassangerByType","adlt","AdultList","BabyList","ChildList","onValideUserPassenger","element","isValid","restOfValues","toUpperCase","res","reserveInfoPassengers","networkError","JSON","stringify","allRefs","concat","MobilBanking","_initialValues","confirmed","provider","costTotal","helpers","PaymentInputs","refInput","CardPaymentModeSelect","onSelect","Radio","paymentMode","PayementMode","Payment","ListItemCostDetail","divider","Divider","toLocaleUpperCase","CardCostDetail","items","StepPaymentContainer","objectRef","useRef","useContext","SeatPassgerSelection","users","config","onSelectPlace","dispatcherRef","place","setPlace","setSelected","handleOpen","handleClose","handlerReservation","handlerValidate","fistUser","useImperativeHandle","bgcolor","labelId","disablePadding","ListItemButton","Dialog","DialogTitle","DialogContent","SeatPlace","DialogContentText","DialogActions","autoFocus","StepSeatContainer","refSeat","handleSelectPassenger","seats","MESSAGE_REQUIRED","ADRESS_REGEX","schemasDetailInfoInitialValue","email","numTel","numTelEmergency","degreParent","pieceId","numPieceId","adressFrom","adressTo","DetailInfos","touched","mr","noValidate","autoComplete","StepInfoContainer","handleSubmitMutation","detailInputRef","err","STEPS","ContainerComponent","StepContainer","active","FrameComponent","Stepper","alternativeLabel","Step","StepLabel","StepReservation","numberAdult","numberChild","numberBaby","psg","useSearchJourney","isLoading","isError","setResult","get","SearchResultJjourney","useLocation","parse","search","results","fetcher","CLientApp","refreshInterval","path","exact","Home","SteperReservation","DateProvider","utils","MomentUtils","apolloClient","ApolloClient","uri","BASE_URL","cache","InMemoryCache","ApolloProvider","client","this","Component","App","ReactDOM","render","document","getElementById","addReservations","removeReservations","precompose","onChangeTypeOfSeat","newReservationUser","col","line","j","getSeat","seatObject","classesVariant"],"mappings":"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","file":"static/js/main.dcc2ed27.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { SeatConfigContext, SeatConfigReducer , intialStateSeatConfiguration } from \"../../core/context\";\r\nimport { Actions } from \"../../core/type\";\r\ninterface Props{\r\n    children : (e:any)=>any\r\n}\r\n\r\nexport const SeatConfigConsumer : React.FC<Props> = ({children}) => {\r\n    return (\r\n    <SeatConfigContext.Consumer>{e =>children(e)}</SeatConfigContext.Consumer>\r\n    )\r\n}\r\nexport const SeatConfigProvider : React.FC<Props> = ({children}) => {\r\n    const [state, dispatch] = React.useReducer(SeatConfigReducer, intialStateSeatConfiguration)\r\n    const dispatcher  = React.useCallback((e:Actions)=>dispatch(e),[])\r\n    return (\r\n        <SeatConfigContext.Provider value={{...state, dispatcher}}>\r\n            { children(dispatch) }\r\n        </SeatConfigContext.Provider>\r\n    )\r\n}","import * as React from 'react';\r\nimport Typography from \"@mui/material/Typography\"\r\nimport SeatPlace from '../SeatPlace';\r\nimport { SeatsInterface, CabineConfigurationInterface, ReservationInterface, RDtype } from \"../../core/type\";\r\nimport { SeatConfigContext } from \"../../core/context\";\r\n\r\nexport declare type TypeReserve = \"reserve\" | \"unreserve\";\r\n\r\nexport declare type handlerDispatchFuncType = (type:TypeReserve, payload : {user?:string, seat :string})=>void;\r\nexport declare type CabineFuncActionType = (\r\n        reserve: ReservationInterface, \r\n        type ?: TypeReserve, \r\n        seat ?: SeatsInterface, \r\n        user ?:string ,\r\n        callback?: handlerDispatchFuncType \r\n    ) => any\r\ninterface CabinesProps {\r\n    dataConfig: CabineConfigurationInterface,\r\n    user?: string,\r\n    actions ?: CabineFuncActionType\r\n}\r\n\r\n\r\nexport const Cabines = React.forwardRef<any, CabinesProps>(({ user,actions}, ref) => {\r\n    //\r\n    const cabRef = React.useRef<any>(null);\r\n    const { \r\n        dispatcher, \r\n        reservations, \r\n        defaultReservation, \r\n        devMod, \r\n        clipboard, \r\n        precomposition, \r\n        selectedTrajet,\r\n        x\r\n    } = React.useContext(SeatConfigContext);\r\n\r\n    \r\n    React.useImperativeHandle(ref, () => ({\r\n        handlerDispatch,\r\n        reservations,\r\n        values : cabRef.current\r\n    }))\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const allReservations =  {...reservations, ...defaultReservation};\r\n\r\n    const handlerAction = React.useCallback(\r\n        (type :TypeReserve,e:SeatsInterface, callback : handlerDispatchFuncType)=> {\r\n            // affect to value to ref cabine\r\n            cabRef.current = { type, data : { user, seat : e.id}}\r\n            actions ? actions(allReservations,type, e ,user, callback) : callback(type, { user, seat : e.id});        \r\n    },[actions, allReservations, user]);\r\n\r\n    const handlerDispatch : handlerDispatchFuncType = React.useCallback((action , payload)=>{\r\n        dispatcher({\r\n            type : action === \"unreserve\" ? \"handlerUnreserve\" : \"handlerReserve\",\r\n            payload,\r\n        });\r\n    },[dispatcher])\r\n\r\n    const onPress = React.useCallback((e: SeatsInterface) => {\r\n        if (devMod) {\r\n            console.log(\"on press\", devMod, clipboard)\r\n            dispatcher({\r\n                type: \"handlerChangeType\",\r\n                payload: { ...e, type: clipboard }\r\n            });\r\n        } else {\r\n            // \r\n            if (e.type === \"SEAT\") {\r\n                if( e.id in allReservations){\r\n                    const exitSeat  = allReservations[e.id];\r\n                    if (exitSeat) {\r\n                        const ownReserve = inTrajet(exitSeat, selectedTrajet );\r\n                        if (ownReserve){\r\n                            if(ownReserve.user === \"user\"){\r\n                                handlerAction(\"unreserve\",e , handlerDispatch)\r\n                            }else{\r\n                                alert(\"la place est deja prise, veiller selectionner un android vide\")\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                handlerAction(\"reserve\", e, handlerDispatch)\r\n            }\r\n            \r\n        }\r\n    },[allReservations, clipboard, devMod, dispatcher, handlerAction, handlerDispatch, selectedTrajet]);\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tbody>\r\n                    <HeaderName nt={parseInt(x.toString())} left=\"#\" right=\"#\"/>\r\n                    {\r\n                        precomposition.map(\r\n                            (i, index) => (\r\n                                <Tr\r\n                                    n = {index}\r\n                                    trajet = { selectedTrajet}\r\n                                    devMod={devMod}\r\n                                    onPress={onPress}\r\n                                    key={i.id} list={i.data}\r\n                                    user={user}\r\n                                    reservations={allReservations}\r\n                                />\r\n                            )\r\n                        )\r\n                    }\r\n                    <HeaderName nt={parseInt(x.toString())} left=\"#\" right=\"#\"/>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst Tr: React.FC<{\r\n    list: SeatsInterface[],\r\n    devMod: boolean, onPress: (e?: any) => void,\r\n    reservations?: ReservationInterface,\r\n    trajet : number[],\r\n    user?: string,\r\n    n : number;\r\n}> = ({list, devMod, reservations = {}, user, onPress, trajet, n }) => {\r\n\r\n    \r\n    const getColors = React.useCallback((seat: SeatsInterface) => {\r\n        // \r\n        let result: {\r\n            desable: boolean,\r\n            color: \"primary\" | \"secondary\" | \"inherit\" | \"info\" | \"success\" | \"error\" | \"warning\" | undefined\r\n        } = { desable: false, color: undefined }\r\n        \r\n        // \r\n        if (seat.type === \"SEAT\") {\r\n            if( seat.id in reservations){\r\n                const exitSeat  = reservations[seat.id];\r\n                if (exitSeat) {\r\n                    const ownReserve = inTrajet(exitSeat, trajet);\r\n                    if (ownReserve){\r\n                        if(ownReserve.user === user){\r\n                            result.color = \"primary\";\r\n                        }else{\r\n                            result.desable = true;\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            }else{\r\n                result.color = \"secondary\"\r\n            }\r\n        }\r\n        return result;\r\n    },[reservations, trajet, user])\r\n\r\n    const handlerClick = React.useCallback((i)=>onPress(i),[onPress])\r\n    \r\n    return (\r\n        <tr>\r\n            <TDName name ={String.fromCharCode( n + 65 )} />\r\n            {list.map(\r\n                i => {\r\n                    const { desable, color } = getColors(i)\r\n                    return (\r\n                        <td key={i.id}>\r\n                            <SeatPlace\r\n                                color = {color}\r\n                                disabled={desable}\r\n                                info={i}\r\n                                onPress={handlerClick}\r\n                                modeDev={devMod}\r\n                            />\r\n                        </td>\r\n                    )\r\n                }\r\n            )}\r\n            <TDName name ={String.fromCharCode( n + 65 )}/>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst HeaderName = ({nt, left, right}:{nt:number, left:any, right: any})=>{\r\n    return (\r\n        <tr>\r\n            <TDName name ={left}/>\r\n            {\r\n                Array.from(Array(nt).keys()).map((_,index)=>(\r\n                    <TDName key={index} name ={String.fromCharCode( index + 65 )}/>\r\n                ))\r\n            }\r\n            <TDName name ={right}/>\r\n        </tr>\r\n    )\r\n}\r\n\r\n\r\nconst TDName = ({name}:{name:string})=>{\r\n    return (\r\n        <td style = {{ textAlign:\"center\" , padding:15}}>\r\n            <Typography \r\n                variant=\"caption\" \r\n                textAlign=\"center\"\r\n                sx ={{p:1}}\r\n            >\r\n                { name}\r\n            </Typography>\r\n        </td>\r\n    )\r\n}\r\n\r\nconst inTrajet = (userTrajet:RDtype[], trajet :number[])=>{\r\n    const [ start ] = trajet;\r\n    return userTrajet.find(i=>{\r\n        const [, iEnd] = i.trajet;\r\n        return iEnd > start\r\n    })\r\n}","import { SeatsInterface, dataPrecomposion } from \"./type\"\r\n\r\nexport function getComposition(precompostion?: dataPrecomposion[]): SeatsInterface[] {\r\n    // \r\n    let data: SeatsInterface[] = [];\r\n    precompostion?.map(item => {\r\n        data = [...data, ...item.data]\r\n    })\r\n    return data\r\n}\r\n\r\nexport function getDecomposition(data: SeatsInterface[], y = 0): dataPrecomposion[] {\r\n    let precompData: dataPrecomposion[] = [];\r\n    for (let i = 0; i < y; i++) {\r\n        precompData.push({\r\n            id: i,\r\n            data: data.filter(item => (item.y === i)).sort((a, b) => a.x - b.x)\r\n        })\r\n    }\r\n\r\n    return precompData\r\n}\r\n\r\ntype data = { [ i:string] : SeatsInterface[]};\r\n\r\nexport function getComp(data: SeatsInterface[], property : keyof SeatsInterface = \"y\"){\r\n    return data.reduce((acc, value)=>{\r\n        const key = value[\"y\"];\r\n        return {\r\n            ...acc,\r\n            [key] : key in acc ? acc[key].concat(value).sort((a:any, b:any) => a.x - b.x) \r\n            : [value]\r\n        }\r\n    },{} as data)\r\n}","import * as React from 'react';\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport SeatPlace, { SeatPlaceProps } from '../components/SeatPlace';\r\n\r\ninterface Props {\r\n    clientActionButtonGroup ?: React.ReactNode\r\n}\r\n\r\ntype SeatDescriptionPropsType = {\r\n    seat?: SeatPlaceProps,\r\n    name?: string,\r\n}\r\n\r\nconst SeatDescription: React.FC<SeatDescriptionPropsType> = (props) => {\r\n    return (\r\n        <Stack flexDirection=\"column\" marginBottom={2}>\r\n            <SeatPlace {...props.seat} modeDev />\r\n            <Typography variant=\"caption\" textAlign=\"center\"marginTop={1}>{props.name}</Typography>\r\n        </Stack>\r\n    )\r\n}\r\nexport const DescriptionContainer: React.FC<Props> = (props) => {\r\n    return (\r\n        <Box>\r\n            <Box style={{ marginBottom: 20 }}>\r\n                <Typography variant=\"subtitle2\" marginBottom={2}>Seats Information</Typography>\r\n                <Box>\r\n                    <SeatDescription seat={{\r\n                        variant: \"contained\",\r\n                        disabled: true,\r\n                        modeDev: false,\r\n                        info: {\r\n                            type: \"SEAT\",\r\n                            id: \"null\",\r\n                            x: 2, y: 3, name: \"null\", idConfigCab: \"null\"\r\n                        }\r\n                    }} name=\"Place indisponible\" />\r\n                    <SeatDescription seat={{\r\n                        variant: \"contained\",\r\n                        color: \"secondary\",\r\n                        modeDev: false,\r\n                        info: {\r\n                            type: \"SEAT\",\r\n                            id: \"null\",\r\n                            x: 2, y: 3, name: \"null\", idConfigCab: \"null\"\r\n                        }\r\n                    }} name=\"Place disponible\" />\r\n                    <SeatDescription seat={{\r\n                        variant: \"contained\",\r\n                        color: \"primary\",\r\n                        modeDev: false,\r\n                        info: {\r\n                            type: \"SEAT\",\r\n                            id: \"null\",\r\n                            x: 2, y: 3, name: \"null\", idConfigCab: \"null\"\r\n                        }\r\n                    }} name=\"Place prise\" />\r\n                </Box>\r\n            </Box>\r\n            <Box>\r\n                { props.clientActionButtonGroup }\r\n            </Box>\r\n            <Box style={{ marginBottom: 20 }}>\r\n                <Typography variant=\"subtitle2\" marginBottom={2}>Seats Note</Typography>\r\n                <Typography variant=\"caption\">\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas repellat libero id veniam pariatur? Velit illum explicabo ea, placeat, ducimus dolore aliquam id voluptatem nobis dignissimos nulla ullam, natus optio?\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Nam odio iusto architecto earum explicabo neque. Nulla, eveniet quia cum ratione illo fugit aut quo fugiat deserunt quaerat vitae repellat maiores?\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem id odio, omnis suscipit eaque dolorem ratione fuga mollitia aliquid pariatur, tempora harum et quisquam assumenda quos, iure ea itaque expedita.\r\n                </Typography>\r\n            </Box>\r\n            <Box>\r\n                <Typography variant=\"subtitle2\" marginBottom={2}>Notice</Typography>\r\n                <Typography variant=\"caption\">\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quas repellat libero id veniam pariatur? Velit illum explicabo ea, placeat, ducimus dolore aliquam id voluptatem nobis dignissimos nulla ullam, natus optio?\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Nam odio iusto architecto earum explicabo neque. Nulla, eveniet quia cum ratione illo fugit aut quo fugiat deserunt quaerat vitae repellat maiores?\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatem id odio, omnis suscipit eaque dolorem ratione fuga mollitia aliquid pariatur, tempora harum et quisquam assumenda quos, iure ea itaque expedita.\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","import * as React from 'react';\r\nimport { SeatConfigContext } from \"../core/context\";\r\nimport { Cabines, CabineFuncActionType } from '../components/Cabine';\r\ninterface Props {\r\n    dispatch: (e?: any) => any,\r\n    user?: string,\r\n    defaultConfiguration?: any,\r\n    actions?: CabineFuncActionType,\r\n}\r\n\r\n\r\nexport const MainPlaceContainer = React.forwardRef<any, Props>((props, ref) => {\r\n    const dataConfig = React.useContext(SeatConfigContext);\r\n    const {defaultConfiguration, dispatch} = props;\r\n    React.useEffect(() => {\r\n        if (defaultConfiguration) {\r\n            dispatch({\r\n                type: \"handlerInit\",\r\n                payload: defaultConfiguration\r\n            })\r\n        }\r\n    }, [defaultConfiguration, dispatch])\r\n    return (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Cabines\r\n                ref= {ref}\r\n                dataConfig={dataConfig}\r\n                user={props.user}\r\n                actions={props.actions}\r\n            />\r\n        </div>\r\n    )\r\n})","import * as React from 'react';\r\nimport Slider from '@mui/material/Slider';\r\nimport { styled } from '@mui/material/styles';\r\nimport { SeatConfigContext  } from \"../../core/context\";\r\n\r\nconst iOSBoxShadow =\r\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\r\n\r\nconst IOSSlider = styled(Slider)(({ theme }) => ({\r\n    color: theme.palette.mode === 'dark' ? '#3880ff' : '#3880ff',\r\n    height: 2,\r\n    padding: '15px 0',\r\n    '& .MuiSlider-thumb': {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\r\n            boxShadow: iOSBoxShadow,\r\n        },\r\n        '&:before': {\r\n            display: 'none',\r\n        },\r\n    },\r\n    '& .MuiSlider-valueLabel': {\r\n        lineHeight: 1.2,\r\n        fontSize: 12,\r\n        background: 'unset',\r\n        padding: 0,\r\n        width: 32,\r\n        height: 32,\r\n        borderRadius: '50% 50% 50% 0',\r\n        backgroundColor: '#3880ff',\r\n        transformOrigin: 'bottom left',\r\n        transform: 'translate(50%, -100%) rotate(-45deg) scale(0)',\r\n        '&:before': { display: 'none' },\r\n        '&.MuiSlider-valueLabelOpen': {\r\n            transform: 'translate(50%, -100%) rotate(-45deg) scale(1)',\r\n        },\r\n        '& > *': {\r\n            transform: 'rotate(45deg)',\r\n        },\r\n    },\r\n    '& .MuiSlider-track': {\r\n        border: 'none',\r\n    },\r\n    '& .MuiSlider-rail': {\r\n        opacity: 0.5,\r\n        backgroundColor: '#bfbfbf',\r\n    },\r\n    '& .MuiSlider-mark': {\r\n        backgroundColor: '#bfbfbf',\r\n        height: 8,\r\n        width: 1,\r\n        '&.MuiSlider-markActive': {\r\n            opacity: 1,\r\n            backgroundColor: 'currentColor',\r\n        },\r\n    },\r\n}));\r\n      \r\n\r\nfunction valuetext(value: number) {\r\n    return `${value} Bienfait`;\r\n}\r\n\r\n\r\nconst Trajet = React.forwardRef((props, ref) => {\r\n    const { trajets, selectedTrajet, dispatcher } = React.useContext(SeatConfigContext);\r\n    const maxTrajet = React.useMemo(()=>trajets.length-1,[trajets]);\r\n\r\n    const handleChange = React.useCallback((event: Event, newValue: number | number[]) => {\r\n        const [nStart, NEnd] = newValue as number[];\r\n        const [oStart,oEnd] = selectedTrajet;\r\n        if(nStart !== oStart || NEnd !== oEnd){\r\n            dispatcher({\r\n                type:\"handlerChangeSelectTrajet\",\r\n                payload : nStart !== NEnd ? [nStart, NEnd] : selectedTrajet\r\n            })\r\n        }\r\n    },[dispatcher, selectedTrajet]);\r\n\r\n    return (\r\n        <IOSSlider\r\n            valueLabelDisplay=\"auto\"\r\n            getAriaLabel={()=>\"pretto slider\"}\r\n            value={selectedTrajet}\r\n            onChange={handleChange}\r\n            getAriaValueText={valuetext}\r\n            min={0}\r\n            max={maxTrajet}\r\n            step={null}\r\n            marks={trajets}\r\n            valueLabelFormat={(x:number)=>\"Bi!\"+x}\r\n        />\r\n    )\r\n})\r\n\r\nexport default Trajet;\r\n","import * as React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { SeatConfigProvider } from './components/SeatConfig';\r\nimport { DescriptionContainer } from './containers/descriptions';\r\nimport { MainPlaceContainer } from './containers/main-places';\r\nimport { CabineFuncActionType} from \"./components/Cabine\"\r\nimport Trajet from \"./components/Trajet\";\r\n\r\ninterface Props {\r\n    user?: string,\r\n    configuration?: any,\r\n    actions?: CabineFuncActionType,\r\n    clientActionButtonGroup ?:React.ReactNode\r\n}  \r\n\r\nexport const ClientPlaceReservations = React.forwardRef<any, Props>(({user, configuration, actions, clientActionButtonGroup}, ref) => {\r\n\r\n    return (\r\n        <SeatConfigProvider>{(dispatch) => (\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={9}>\r\n                    <Box sx={{ pl :2,pr:2, m:3 }}>\r\n                        <Typography \r\n                            textAlign=\"center\" \r\n                            variant=\"subtitle2\" \r\n                            marginBottom ={2}\r\n                        >Trajet</Typography>\r\n                        <Trajet />\r\n                        <Box sx={{ m: 3 }} />\r\n                    </Box>\r\n                    <Typography textAlign=\"center\" variant=\"subtitle2\" marginBottom ={2}>Plant Cabine</Typography>\r\n                    <MainPlaceContainer\r\n                        ref = { ref }\r\n                        defaultConfiguration={configuration}\r\n                        dispatch={dispatch}\r\n                        actions={actions}\r\n                        user={user} />\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <DescriptionContainer clientActionButtonGroup = {clientActionButtonGroup}/>\r\n                </Grid>\r\n            </Grid>\r\n        )}</SeatConfigProvider>\r\n    )\r\n})","export * from \"./components/Cabine\";\r\nexport * from \"./components/SeatConfig\";\r\nexport * from \"./components/SeatPlace\";\r\nexport * from \"./company\";\r\nexport * from \"./client\";\r\nexport * from \"./core/type\";","export * from \"./type\";\r\nexport * from \"./funct\";\r\nexport * from \"./context\";","import axios from \"axios\";\r\n\r\nexport const ROOT_API_URL = \"http://localhost:8000\";\r\nexport const COMPANY_URL = \"/accounts/company/\";\r\nexport const JOURNEY_URL = \"/transport/journey/\";\r\nexport const PASSENGER_URL = \"/passenger/\";\r\nexport const RESERVE_URL = \"/reserve/\";\r\n\r\nexport const apis = axios.create({\r\n    baseURL : ROOT_API_URL\r\n})","import { useEffect, useState } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { JourneyInterface } from '../../../utils/@types/transport';\nimport { RootReducerInterface } from '../@types/reducers';\nimport { apis, JOURNEY_URL } from '../config';\n\n//\nconst useShallowEqualSelector: typeof useSelector = (selector) => {\n  return useSelector(selector, shallowEqual);\n};\n\n//\nexport const useReservations = () =>\n  useShallowEqualSelector((state: RootReducerInterface) => state.steperReservation);\n\n//\nexport const useAuth = () =>\n  useShallowEqualSelector((state: RootReducerInterface) => state);\n\nexport const useVoyages = (): JourneyInterface[]=>{\n  const [state, setState] = useState([])\n  useEffect(() => {\n    apis.get(JOURNEY_URL).then(res =>{\n      setState(res.data.results)\n    }).catch(error=> {\n      console.log(error)\n    })\n  },[])\n  \n  return state;\n}","\r\n// constant steper reservation\r\n\r\nexport const NEXT_STEP = \"NEXT_STEP\";\r\nexport const PREVIOUS_STEP = \"PREVIOUS_STEP\";\r\nexport const GO_TO_STEP = \"GO_TO_STEP\";\r\nexport const HOME_INIT = \"HOME_INIT\";\r\nexport const INIT_STEP = \"INIT_STEP\";\r\n\r\nexport const SELECT_JOURNEY = \"SELECT_JOURNEY\";\r\nexport const SET_PASSENGER = \"SET_PASSEGER\";\r\nexport const SET_SESSION = \"SET_SESSION\";\r\nexport const RESET_RESERVATION =\"RESET_RESERVATION\"","import { SteperReservationInterface } from \"../../@types/reducers\";\r\nimport { ActionReducer } from \"../../../../utils/@types/store\";\r\nimport { useReservations } from \"../hooks\";\r\nimport React, { useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Querystr from \"query-string\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { apis, COMPANY_URL, RESERVE_URL } from \"../../config\";\r\nimport { JourneyInterface } from \"../../../../utils/@types/transport\";\r\nimport { PassengerReserved } from \"../../@types/reserve\";\r\nimport { \r\n    GO_TO_STEP, NEXT_STEP, PREVIOUS_STEP, \r\n    RESET_RESERVATION, \r\n    SELECT_JOURNEY, SET_PASSENGER, SET_SESSION , INIT_STEP\r\n} from \"./constants\";\r\n\r\n\r\nconst INITIAL_STATE : SteperReservationInterface = {\r\n    currentStep: 0,\r\n    maxStep: 0,\r\n    padSteper: null,\r\n    company : null,\r\n    journeySelected:undefined,\r\n    passengers:undefined,\r\n    sessionReservation:null,\r\n    folderReservation :null,\r\n}\r\n\r\n\r\nexport const steperReservation = (state=INITIAL_STATE, action: ActionReducer): SteperReservationInterface=>{\r\n    \r\n    switch (action.type) {\r\n        case PREVIOUS_STEP:\r\n            return {...state, padSteper : PREVIOUS_STEP, currentStep : state.currentStep - 1 };\r\n        case INIT_STEP:\r\n            return {...state, ...action.payload}\r\n        case SELECT_JOURNEY:\r\n            console.log(action)\r\n            return {\r\n                ...state,\r\n                journeySelected : action.payload.selected,\r\n                folderReservation :action.payload.folder,\r\n                sessionReservation : action.payload.session,\r\n            }\r\n        case SET_PASSENGER:\r\n            return {\r\n                ...state,\r\n                passengers:action.payload\r\n            }\r\n        case SET_SESSION:\r\n            return {\r\n                ...state,\r\n                sessionReservation: action.payload\r\n            }\r\n        case NEXT_STEP:\r\n            const currentStep = state.currentStep + 1 ;\r\n            return {\r\n                ...state, \r\n                padSteper : NEXT_STEP ,\r\n                currentStep , \r\n                maxStep : currentStep > state.maxStep ? currentStep : state.maxStep \r\n            };\r\n        case GO_TO_STEP:\r\n            return {...state, padSteper: GO_TO_STEP, currentStep : action.payload}\r\n        case RESET_RESERVATION:\r\n            return {\r\n                ...state,\r\n                currentStep :0,\r\n                journeySelected :undefined,\r\n                maxStep:0,\r\n                sessionReservation:undefined,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// functions...\r\n\r\nexport const useSteperAction = ()=>{\r\n    const reservations = useReservations();\r\n    const dispatch = useDispatch();\r\n    const goTo = React.useCallback((n :number)=>{\r\n        dispatch({\r\n            type : GO_TO_STEP,\r\n            payload : n\r\n        })\r\n    },[dispatch])\r\n\r\n    const initialise = React.useCallback((n :SteperReservationInterface)=>{\r\n        dispatch({\r\n            type : INIT_STEP,\r\n            payload : n\r\n        })\r\n    },[dispatch])\r\n    const goNext = React.useCallback(()=>{\r\n        dispatch({\r\n            type : NEXT_STEP\r\n        })\r\n    },[dispatch])\r\n\r\n    const goPrivious = React.useCallback(()=>{\r\n        dispatch({\r\n            type : PREVIOUS_STEP\r\n        })\r\n    },[dispatch])\r\n\r\n\r\n    return { ...reservations, goTo, goPrivious, goNext, initialise }\r\n}\r\n\r\nexport function resetReservation():ActionReducer{\r\n    return {\r\n        type : SELECT_JOURNEY,\r\n        payload:null\r\n    }\r\n}\r\nexport function selectJourney (journey:any):ActionReducer{\r\n    return {\r\n        type : SELECT_JOURNEY,\r\n        payload: journey\r\n    }\r\n}\r\n\r\nexport function setPassangers (value:PassengerReserved):ActionReducer{\r\n    return {\r\n        type : SET_PASSENGER,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport function setSessionJourney (value:any):ActionReducer{\r\n    return {\r\n        type : SET_SESSION,\r\n        payload: value\r\n    }\r\n}\r\n\r\nexport const useUriHome = ()=>{\r\n    const dispatch = useDispatch();\r\n    const { company } = useSteperAction();\r\n    const {location, push} = useHistory();\r\n    const parced:any = Querystr.parse(location.search);\r\n\r\n    React.useEffect(()=>{\r\n        if(!parced.cpnid && company?.id){\r\n            push(\"?cpnid=\"+company.id)\r\n        }else if(parced.cpnid && !company?.id){\r\n            apis.get(COMPANY_URL+parced.cpnid+\"/\")\r\n                .then(res=>{\r\n                    console.log(\"result\",res)\r\n                })\r\n                .catch(err=>{\r\n                    console.log(\"error\",err)\r\n                })\r\n        }\r\n        console.log(\"parced\",parced)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n}\r\n\r\nexport const useSeletedJourney = ()=>{\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    return useCallback((value:JourneyInterface)=>{\r\n        apis.post(RESERVE_URL, {journey : value.id}).then(res=>{\r\n            dispatch(selectJourney(res.data))\r\n            history.push(\"/res\")\r\n        }).catch(err=>{\r\n\r\n        })\r\n        // dispatch(selectJourney(value));\r\n    },[dispatch])\r\n}\r\nexport const useSetSessionJourney = ()=>{\r\n    const dispatch = useDispatch();\r\n    return useCallback((value:any)=>{\r\n        dispatch(setSessionJourney(value));\r\n    },[dispatch])\r\n}\r\n\r\nexport const useSetPassenger = ()=>{\r\n    const dispatch = useDispatch();\r\n    return useCallback((value:PassengerReserved)=>{\r\n        dispatch(setPassangers(value));\r\n    },[dispatch])\r\n}","import { ActionReducer } from \"../../../../utils/@types/store\"\r\n\r\nconst passengerValueInit = {\r\n    key :0,\r\n    firstname: \"\",\r\n    middlename: \"\",\r\n    lastname: \"\",\r\n    birthDay: \"2019-08-24\",\r\n    gender: \"M\",\r\n    typeUser: \"adult\",\r\n    journey: 0,\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    adults : [],\r\n    children : [],\r\n    babies : [],\r\n}\r\n\r\nconst INIT_PASSENGER = \"INIT_PASSENGER\";\r\nconst SET_VALUE_PASSENGER = \"SET_VALUE_PASSENGER\";\r\n\r\nexport const tmpData = (state =INITIAL_STATE, action: ActionReducer)=>{\r\n    switch (action.type) {\r\n        case INIT_PASSENGER :\r\n            const {adult, child, baby} = action.payload;\r\n            return {\r\n                ...state,\r\n                ...initPassengerArrayValue(adult, child, baby)\r\n            }\r\n        case SET_VALUE_PASSENGER:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initPassengerArrayValue = (adult:number, child:number, baby:number)=>{\r\n    return {\r\n        adults : [],\r\n        children : [],\r\n        babies : [],\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {steperReservation } from \"./steperReservation\";\r\nimport { tmpData} from \"./tmpData\"\r\n\r\nconst reducers = combineReducers({\r\n    steperReservation,\r\n    tmpData\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './services'\r\n \r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage: storage,\r\n  whitelist: ['steperReservation'], // which reducer want to store,\r\n  blacklist : ['tmpData']\r\n};\r\n\r\nconst pReducer = persistReducer<any,any>(persistConfig, rootReducer);\r\nconst middleware = applyMiddleware(thunk);\r\nconst store = createStore(pReducer, composeWithDevTools(\r\n  middleware\r\n  // other store enhancers if any\r\n));\r\nconst persistor = persistStore(store);\r\nexport { persistor, store };","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nexport const themeClient = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: deepPurple[500],\r\n        },\r\n        secondary: {\r\n            main: pink[500],\r\n        },\r\n    },\r\n});\r\n\r\nexport const themeClientWithFontSize = responsiveFontSizes(themeClient);","import { PersistGate } from 'redux-persist/integration/react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { Provider} from \"react-redux\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {persistor, store} from \"./stores\";\r\nimport { themeClientWithFontSize } from './theme';\r\n\r\n/**\r\n *\r\n * app state of the application client\r\n * @param {*} {children}\r\n * @returns\r\n */\r\nexport const AppStateProvider:React.FC = ({children}) => {    \r\n  return (\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        {children}\r\n      </PersistGate>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport const ThemeClientProvider:React.FC = ({children})=>{\r\n  return <ThemeProvider  theme={themeClientWithFontSize}>\r\n    <CssBaseline />\r\n    {children}\r\n  </ThemeProvider>\r\n}","export default __webpack_public_path__ + \"static/media/ttm_logo.ac62b429.png\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container'\r\nimport { createStyles, makeStyles, Theme, useTheme } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Link } from \"react-router-dom\"\r\nimport logoTtm from \"../../../utils/assets/ttm_logo.png\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    mt:{\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    imgLogo:{\r\n        height :85,\r\n        width: \"auto\",\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nconst CLientAppBar = React.forwardRef<any,any>(function MyAppBar(props, ref) {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState(false);\r\n    const matches = useMediaMobile()\r\n    return (\r\n        <>\r\n        <AppBar position=\"fixed\" elevation={0}  {...props} role=\"appbar\" ref={ref}>\r\n            <Container maxWidth=\"md\">\r\n            <Toolbar style={{paddingRight:0, paddingLeft:0}}>\r\n                <div className={classes.title}>\r\n                    <Link to=\"/\">\r\n                        <img className={classes.imgLogo} src={logoTtm} alt=\"Ttm\"/>\r\n                    </Link>\r\n                </div>\r\n                {\r\n                    matches ? (\r\n                        <div className={classes.mt}>\r\n                            <Toolbar>\r\n                                <Typography \r\n                                    variant=\"subtitle1\" \r\n                                    className={classes.menuButton}>\r\n                                    Home\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\" className={classes.menuButton}>\r\n                                    Programmes\r\n                                </Typography>\r\n                                {/* <Typography variant=\"subtitle1\" className={classes.menuButton}>\r\n                                    Login\r\n                                </Typography> */}\r\n                            </Toolbar>\r\n                        </div>\r\n                    ):(\r\n                        <IconButton style={{color:\"#fff\"}} onClick={()=>setState(true)}>\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    )\r\n                }\r\n                </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n            <SwipeableDrawer\r\n                anchor=\"left\"\r\n                open={state}\r\n                onClose={()=>setState(false)}\r\n                onOpen={()=>{\r\n                    matches && setState(true)\r\n                }}\r\n            >\r\n                <h1>Hello menu</h1>\r\n            </SwipeableDrawer>\r\n        </>\r\n    );\r\n})\r\nexport default CLientAppBar;\r\n\r\nexport const useMediaMobile = ()=>{\r\n    const theme = useTheme();\r\n    return useMediaQuery(theme.breakpoints.up('sm'));\r\n}","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport ClientAppBar, { useMediaMobile } from \"../components/appbar\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\ninterface Props {\r\n    window?: () => Window;\r\n    children: any;\r\n  }\r\n  \r\nfunction HideOnScroll(props: Props) {\r\n    const { children, window } = props;\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n    });\r\n\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}\r\n  \r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    children :{\r\n        marginTop : theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function Withappbar(props: Props){\r\n    const classes = useStyles()\r\n    const matches = useMediaMobile()\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <HideOnScroll {...props}>\r\n                <ClientAppBar />\r\n            </HideOnScroll>\r\n            {matches && <Toolbar />}\r\n            <div className={classes.children}>\r\n                {props?.children}\r\n            </div>      \r\n        </React.Fragment>\r\n      );\r\n}","export default __webpack_public_path__ + \"static/media/gb1.8f24b2d9.jpg\";","import React from 'react'\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { createStyles, makeStyles, Theme,  } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport bgImage from \"../../../utils/assets/gb1.jpg\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root:{\r\n        backgroundImage : \"url(\"+bgImage+\")\",\r\n    },\r\n    bg:{\r\n        backgroundColor : \"#e0e4f773\",\r\n        color : \"#fff\",\r\n        paddingBottom: theme.spacing(3),\r\n    },\r\n    pt3:{\r\n        paddingTop: theme.spacing(5),\r\n        paddingBottom: theme.spacing(3) \r\n    },\r\n    title :{\r\n        textShadow: \"1px 1px 4px black\",\r\n    }\r\n  }),\r\n);\r\nconst SearchContainer:React.FC = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.bg}>\r\n                <Container maxWidth=\"md\">\r\n                    <div className={classes.pt3}>\r\n                        <Typography className={classes.title} variant=\"h4\">\r\n                            Voyager devient encore plus simple!\r\n                        </Typography>\r\n                    </div>\r\n                    <Grid container spacing={4}>\r\n                        <Grid item xs={12} md={8} sm={8}>{props?.children}</Grid>\r\n                        <Grid item xs={12} md={4} sm={4}>\r\n                            <h1>Ttm nos services</h1>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContainer\r\n","import React from 'react'\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { PassengerReserved } from '../@types/reserve';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        width:\"100%\",\r\n    },\r\n    bg:{\r\n        backgroundColor : theme.palette.background.paper,\r\n        width:\"100%\",\r\n    },\r\n    item:{\r\n        width:\"100%\",\r\n        boxSizing: \"content-box\",\r\n    }\r\n  }),\r\n);\r\n\r\n// filter and option\r\ntype Options =  {id:any, name: keyof PassengerReserved , label : string, description:string};\r\n\r\n\r\nexport interface InputPassengerProps{\r\n    label ?: string,\r\n    name ?: string,\r\n    onChange ?: (e:PassengerReserved)=>void,\r\n    value ?: PassengerReserved\r\n}\r\n\r\n\r\nexport interface OptionPassangerRenderProps{\r\n    option :Options;\r\n    onChange :any,\r\n    value : PassengerReserved\r\n}\r\n\r\n// initial reducers...\r\nexport const INITIAL_STATE : PassengerReserved = {adult :1, baby :0, child:0};\r\nconst DataPassengers: Options[] = [\r\n    {id:1, name:\"adult\", label : \"Adult\", description:\"Plus de 12 ans\"},\r\n    {id:2, name:\"child\", label : \"Enfant\",description:\"Moin de 12ans\"},\r\n    {id:3, name:\"baby\", label : \"Bebe\",description:\"Moin de 3ans\"},\r\n]\r\n\r\n\r\nfunction init(initialState:PassengerReserved):PassengerReserved {\r\n    return initialState;\r\n}\r\n  \r\nfunction reducer(state:PassengerReserved, action:any):PassengerReserved {\r\n    switch (action.type) {\r\n        case 'increment[adult]':\r\n            return {...state, adult : state.adult +1 };\r\n        case 'decrement[adult]':\r\n            return {...state, adult : preventNegatifpassager(state.adult -1) };\r\n        case 'increment[child]':\r\n            return {...state, child : state.child +1 };\r\n        case 'decrement[child]':\r\n            return {...state, child : preventNegatifpassager(state.child -1) };\r\n        case 'increment[baby]':\r\n            return {...state, baby : state.baby +1 };\r\n        case 'decrement[baby]':\r\n            return {...state, baby : preventNegatifpassager(state.baby -1) };\r\n        case 'reset':\r\n            return init(action.payload);\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst preventNegatifpassager = (n:number)=>{\r\n    return n < 0 ? 0 : n\r\n}\r\nexport const useStateInputNumberPassager =(initialValue:PassengerReserved)=> {\r\n    return React.useReducer(reducer, initialValue, init);\r\n}\r\n// \r\nconst OptionPassangerRender:React.FC<OptionPassangerRenderProps> = ({onChange,...props})=>{\r\n    const classes = useStyles()\r\n    const _number = props.value[props.option.name]\r\n    return (\r\n        <List\r\n            className={classes.root}\r\n            component=\"div\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            subheader={\r\n                <ListSubheader component=\"div\" className={classes.bg} id=\"nested-list-subheader\">\r\n                    {props.option.label}\r\n                </ListSubheader>\r\n            }\r\n        >\r\n            <ListItem className={classes.item}>\r\n                <ListItemIcon>\r\n                    <IconButton size=\"small\" onClick={() => onChange({type: 'decrement['+props.option.name+']'})}>\r\n                        <RemoveIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </ListItemIcon>\r\n                <ListItemText primary={_number} />\r\n                <ListItemIcon>\r\n                    <IconButton size=\"small\" onClick={() => onChange({type: 'increment['+props.option.name+']'})}>\r\n                        <AddIcon fontSize=\"small\"/>\r\n                    </IconButton>\r\n                </ListItemIcon>\r\n            </ListItem>\r\n        </List>\r\n    )\r\n}\r\n\r\n// \r\n\r\n\r\nconst InputPassenger:React.FC<InputPassengerProps> = ({...props}) => {\r\n    const initialValue = React.useMemo(() => {\r\n        return {...INITIAL_STATE, ...props.value}\r\n    }, [props.value]);\r\n\r\n    const [state, dispatch] = useStateInputNumberPassager(initialValue);\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n        props.onChange && props.onChange(state)\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popover' : undefined;\r\n\r\n    const numberPassanger = React.useMemo(() => {\r\n        const n = state.adult + state.baby + state.child\r\n        return n +\" Passagers\"\r\n    }, [state])\r\n\r\n    return (\r\n        <div>\r\n            <FormControlLabel\r\n                // labelPlacement =\"start\"\r\n                control={\r\n                    <div>\r\n                        <IconButton style={{marginRight : 10}} aria-describedby={id} color=\"primary\" onClick={handleClick}>\r\n                            <GroupAddIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <Popover\r\n                            id={id}\r\n                            open={open}\r\n                            anchorEl={anchorEl}\r\n                            onClose={handleClose}\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'left',\r\n                            }}\r\n                        >\r\n                            {DataPassengers.map(option=><OptionPassangerRender key={option.id} onChange={dispatch}  option={option} value={state}/>)}\r\n                        </Popover>\r\n                    </div>\r\n                }\r\n                label={numberPassanger}\r\n            />        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(InputPassenger);\r\n\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const TOWN_STRING = gql`\r\n    query GetTown($name : String){\r\n        coverCities(town_Istartswith:$name){\r\n            pageInfo {\r\n                hasNextPage\r\n                hasPreviousPage\r\n                startCursor\r\n                endCursor\r\n            }\r\n            edges{\r\n                node{\r\n                    id\r\n                    dateCreated\r\n                    town\r\n                    code\r\n                    latitude\r\n                    longitude\r\n                }\r\n                cursor\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DETAIL_JOURNEY = gql`\r\n    query DetailJourney($id:ID!){\r\n        journey(id:$id){\r\n            id\r\n            dateCreated\r\n            numJourney\r\n            price\r\n            devise\r\n            dateDeparture\r\n            dateReturn\r\n            hoursReturn\r\n            hoursDeparture\r\n            isDirect\r\n            exprired\r\n            numberOfPlacesReserved\r\n            routeNames\r\n            trajets{\r\n                label\r\n                value\r\n            }\r\n            routes{\r\n                edges{\r\n                    node{\r\n                    whereFrom{\r\n                        town\r\n                        code\r\n                    }\r\n                    whereTo{\r\n                        town\r\n                        code\r\n                    }\r\n                    }\r\n                }\r\n            }\r\n            cars{\r\n                codeAppareil\r\n                configCab{\r\n                    numberOfSeats\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const DETAIL_JOURNEY_SELECTED = gql`\r\n    query DetailJourneySelected($id:ID!){\r\n        journeySelected(id:$id){\r\n            id\r\n            numberAdult\r\n            numberChild\r\n            numberBaby\r\n            lastStep\r\n            session {\r\n                key\r\n            }\r\n            payment{\r\n                id\r\n                provider\r\n                confirmed\r\n                costTotal\r\n                datePayment\r\n            }\r\n            otherInfo{\r\n                id\r\n                firstname\r\n                middlename\r\n                lastname\r\n                email\r\n                numTelEmergency\r\n                pieceId\r\n                numPieceId\r\n                adressFrom\r\n                adressTo\r\n                birthDay\r\n            }\r\n            passengers{\r\n            edges{\r\n                node{\r\n                id\r\n                firstname\r\n                middlename\r\n                lastname\r\n                birthDay\r\n                gender\r\n                typeUser\r\n                dateCreated\r\n                }\r\n            }\r\n            }\r\n            journey {\r\n                id\r\n                price\r\n                numJourney\r\n                devise\r\n                routeNames\r\n                trajets{\r\n                    label\r\n                    value\r\n                }\r\n                journeyRoutes {\r\n                    edges {\r\n                    node {\r\n                        id\r\n                        price\r\n                        devise\r\n                        journeySeatsReserved {\r\n                        edges {\r\n                            node {\r\n                            expired\r\n                            seat {\r\n                                id\r\n                            }\r\n                            passenger {\r\n                                id\r\n                            }\r\n                            }\r\n                        }\r\n                        }\r\n                        route {\r\n                            id\r\n                            whereFrom {\r\n                                id\r\n                                town\r\n                            }\r\n                            whereTo {\r\n                                id\r\n                                town\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                }\r\n                cars {\r\n                    configCab{\r\n                        name\r\n                        devMod\r\n                        x\r\n                        y\r\n                        clipboard\r\n                        numberOfSeats\r\n                        seats{\r\n                        edges{\r\n                            cursor\r\n                            node{\r\n                            id\r\n                            x\r\n                            y\r\n                            name\r\n                            type\r\n                            }\r\n                        }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const JOURNEY_COMPANY_PRESENTATION_STRING = gql`\r\n    query getJourneyHomePresentationCompany($company:Float){\r\n        journies(company_Id:$company){\r\n            pageInfo{\r\n                hasNextPage\r\n                hasPreviousPage\r\n                startCursor\r\n                endCursor\r\n            }\r\n            edges{\r\n                cursor\r\n                node{\r\n                    id\r\n                    numJourney\r\n                    price\r\n                    devise\r\n                    dateReturn\r\n                    dateDeparture\r\n                    hoursDeparture\r\n                    hoursReturn\r\n                    routeNames\r\n                    cars{\r\n                        codeAppareil\r\n                        immatriculation\r\n                        typeAppareil\r\n                    }\r\n                    company{\r\n                        id\r\n                        nom\r\n                        code\r\n                    }\r\n                    \r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { AutocompleteChangeDetails, AutocompleteChangeReason } from '@material-ui/lab/Autocomplete';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PlaceIcon from '@material-ui/icons/Place';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { CoverCityInterface } from '../../../utils/@types/transport';\r\nimport { useSearchTown } from \"../../../utils/apis/graphql/queries\";\r\nexport interface InputCityProps{\r\n    options ?:CoverCityInterface[],\r\n    label ?: string,\r\n    name ?: string,\r\n    onChange?:((event: React.ChangeEvent<{}>, value: any, reason: AutocompleteChangeReason, details?: AutocompleteChangeDetails<any> | undefined) => void) | undefined\r\n}\r\n\r\nexport interface OptionCityRenderProps{\r\n    option :CoverCityInterface; selected:boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        item:{\r\n            display:\"flex\",\r\n        },\r\n        iconImg:{\r\n            width: 30,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            flexWrap: \"wrap\",\r\n            alignContent: \"space-around\",\r\n            justifyContent: \"space-evenly\",\r\n            alignItems: \"stretch\",\r\n        }\r\n    }),\r\n);\r\nconst OptionCityRender:React.FC<OptionCityRenderProps> = (props)=>{\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.item}>\r\n            {props.option.code &&(\r\n                <div className={classes.iconImg}>\r\n                    <PlaceIcon />\r\n                    <Typography variant=\"caption\" color=\"initial\">\r\n                        {props.option.code}\r\n                    </Typography>\r\n                </div>\r\n            )}\r\n            <Typography variant=\"subtitle1\" color=\"initial\">\r\n                {props.option.town}\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\nconst InputCity:React.FC<InputCityProps> = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [options, setOptions] = React.useState<CoverCityInterface[]>([]);\r\n    const {data, loading}= useSearchTown();\r\n    // const loading = React.useMemo(()=>open && options.length === 0,[open, options.length])\r\n    const handlerClose = React.useCallback(() => setOpen(false),[])\r\n    const handlerOpen = React.useCallback(() => setOpen(true),[])\r\n\r\n    React.useEffect(() => {\r\n        // (async () => {\r\n        //     const response = await apis.get(\"/transport/cover_city/\")\r\n        //     if (active) {\r\n        //         setOptions(response.data.results);\r\n        //     }\r\n        // })();\r\n\r\n    }, [ loading]);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setOptions([]);\r\n        }\r\n    }, [open]);\r\n\r\n    console.log(\"data\", data)\r\n    return (\r\n        <Autocomplete\r\n            freeSolo\r\n            id=\"free-solo-2-demo-input\"\r\n            disableClearable\r\n            open={open}\r\n            loading={loading}\r\n            onOpen={handlerOpen}\r\n            onClose={handlerClose}\r\n            onChange = { props.onChange}\r\n            getOptionLabel = {(option)=>option.town}\r\n            options={options}\r\n            renderOption = {(option, { selected })=><OptionCityRender option={option} selected={selected} />}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label= {props.label}\r\n                    size=\"small\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    name = {props.name}\r\n                    // onChange = {props.onChange}\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nexport default InputCity;\r\n","import { useQuery } from \"@apollo/client\";\r\nimport {\r\n    TOWN_STRING,JOURNEY_COMPANY_PRESENTATION_STRING, \r\n    DETAIL_JOURNEY, \r\n    DETAIL_JOURNEY_SELECTED\r\n} from \"./queries_string\";\r\n\r\nexport const useSearchTown = ()=>useQuery(TOWN_STRING);\r\nexport const useGetCompanyJourneyPres = (company:any)=>useQuery(JOURNEY_COMPANY_PRESENTATION_STRING, {\r\n    variables:{company}\r\n});\r\n\r\nexport const useDetailJourney = (id:any)=>useQuery(DETAIL_JOURNEY, {\r\n    variables:{id}\r\n});\r\n\r\nexport const useDetailJourneySeleted = (id:any)=>useQuery(DETAIL_JOURNEY_SELECTED, {\r\n    variables:{id}\r\n});","import React from 'react';\r\nimport {KeyboardDatePicker} from '@material-ui/pickers';\r\nimport moment from \"moment\";\r\n\r\nexport interface DateInputInterface{\r\n    label?:string,\r\n    value ?: any,\r\n    onChange : (e:any) =>void,\r\n    minDate?:any,\r\n    maxDate?:any,\r\n    helperText?: any,\r\n    style ?: any;\r\n}\r\n\r\nconst DateInput:React.FC<DateInputInterface> = ({label=\"Date\",...props}) => {\r\n    const memoizedValue = React.useMemo(() => moment().format('YYYY-MM-DD'), []);\r\n    const [selectedDate, setSelectedDate] = React.useState<any>(\r\n        moment(props.value).format('YYYY-MM-DD') || memoizedValue\r\n    );\r\n\r\n    const handleDateChange = (date: any) => {\r\n        setSelectedDate(date);\r\n        props.onChange(date?.format('YYYY-MM-DD').toString());\r\n    };\r\n  return (\r\n    <KeyboardDatePicker\r\n        InputProps={{\r\n            fullWidth:true,\r\n            style: {\r\n            fontSize: 13,\r\n            },\r\n        }}\r\n        // disableToolbar\r\n        style={props.style}\r\n        disablePast\r\n        fullWidth\r\n        size=\"small\"\r\n        variant=\"inline\"\r\n        format=\"YYYY-MM-DD\"\r\n        margin=\"normal\"\r\n        id=\"date-picker-inline\"\r\n        label={label}\r\n        value={selectedDate}\r\n        maxDate={props.maxDate}\r\n        minDate = {props.minDate}\r\n        helperText = {props.helperText}\r\n        onChange={(date) => {\r\n            handleDateChange(date);\r\n        }}\r\n        KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n        }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default React.memo<DateInputInterface>(DateInput)","import React, { useMemo } from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Querystr from \"query-string\";\r\nimport Button from '@material-ui/core/Button'\r\nimport moment from 'moment';\r\nimport { Formik } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport InputPassenger, { INITIAL_STATE as InitialNumberPassenger } from './inputPassenger';\r\nimport InputCity from './inputCity';\r\nimport DateInput from '../../../packages/ui/components/inputs/DateInput';\r\nimport { Reservations } from '../@types/reserve';\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding : theme.spacing(2)\r\n    },\r\n    title:{\r\n        fontWeight :\"bold\",\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nexport interface SearchVoyageProps{\r\n\r\n}\r\n\r\nconst SearchVoyage:React.FC<SearchVoyageProps> = (props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const initialValues: Reservations = useMemo(()=>(\r\n        { \r\n            dateDeparture :moment().format('YYYY-MM-DD'),\r\n            dateReturn :moment().format('YYYY-MM-DD'),\r\n            onlyDirect :true,\r\n            passengers : InitialNumberPassenger,\r\n            whereFrom:\"\",\r\n            whreTo :\"\"\r\n        }\r\n    ),[]);\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <Typography className={classes.title} variant=\"subtitle1\" color=\"initial\">Voyage</Typography>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                onSubmit={(values, actions) => {\r\n                    actions.setSubmitting(true);\r\n                    history.push(Querystr.stringifyUrl({\r\n                        url:\"/search\",\r\n                        query:{\r\n                            dateDeparture :values.dateDeparture,\r\n                            dateReturn :values.dateReturn,\r\n                            onlyDirect :values.onlyDirect,\r\n                            whereFrom:values.whereFrom,\r\n                            whreTo :values.whreTo,\r\n                            ...values.passengers,\r\n                        }\r\n                    }))\r\n                   \r\n                }}\r\n            >{({\r\n                values,\r\n                handleChange,\r\n                setFieldValue,\r\n                handleSubmit,\r\n                /* and other goodies */\r\n            }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputCity \r\n                                label=\"Ville de depart\" \r\n                                name=\"whereFrom\" \r\n                                onChange={(_,e)=>{\r\n                                    setFieldValue(\"whereFrom\",e.town)\r\n                                }} \r\n                                // options={options}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputCity \r\n                                label=\"Ville d'arriver\" \r\n                                name=\"whreTo\" onChange={(_,e)=>setFieldValue(\"whreTo\",e.town)} \r\n                                // options={options} \r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={4}>\r\n                        {/* date input */}\r\n                        <Grid item xs={6}>\r\n                            <DateInput\r\n                                maxDate = {moment(values.dateDeparture).format('YYYY-MM-DD')}\r\n                                label=\"Date de depart\" \r\n                                onChange={d=>setFieldValue(\"dateDeparture\",d)}\r\n                                helperText = \"commencer par la date d'arriver\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <DateInput\r\n                                minDate = {moment(values.dateReturn).format('YYYY-MM-DD') }\r\n                                label=\"Date d'arriver\" \r\n                                onChange={d=>setFieldValue(\"dateReturn\",d)}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={4}>\r\n                        {/* Passanger */}\r\n                        <Grid item xs={6}>\r\n                            <InputPassenger value={values.passengers} onChange={e=>setFieldValue(\"passengers\",e)}/>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={values.onlyDirect}\r\n                                        onChange={handleChange}\r\n                                        name=\"onlyDirect\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Aller simple\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div style={{marginTop:20,}}>\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\r\n                            Search\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default SearchVoyage;","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Chip from '@mui/material/Chip';\r\nimport Stack from '@mui/material/Stack';\r\nimport DirectionsBusIcon from '@mui/icons-material/DirectionsBus';\r\nimport WatchLaterOutlinedIcon from '@mui/icons-material/WatchLaterOutlined';\r\nexport interface BasicCardTravelProps{\r\n    onClick ?:()=>void;\r\n    price : string;\r\n    dateDeparture :string;\r\n    routeNames:string;\r\n    busNumber :string;\r\n    hourDeparture :string;\r\n}\r\n\r\nexport default function BasicCardTravel(props:BasicCardTravelProps) {\r\n    return (\r\n        <Card sx={{ minWidth: 275 }} elevation={2}>\r\n            <CardActionArea onClick={props.onClick}>\r\n                <CardContent>\r\n                    <Stack direction=\"row\" spacing={1} justifyContent=\"space-between\" marginBottom={1}>\r\n                        <Chip icon={<WatchLaterOutlinedIcon fontSize=\"small\" />} label={props.hourDeparture} variant=\"outlined\"/>\r\n                        <Chip label={props.price} color=\"primary\" variant=\"outlined\" />\r\n                    </Stack>\r\n                    <Typography sx={{ fontSize: 12 }} color=\"text.secondary\" gutterBottom>\r\n                        {props.dateDeparture}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"div\">\r\n                        {props.routeNames}\r\n                    </Typography>\r\n                    <Stack direction=\"row\" spacing={1} marginTop={2}>\r\n                        <DirectionsBusIcon color=\"primary\" />\r\n                        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                            {props.busNumber}\r\n                        </Typography>\r\n                    </Stack>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport BasicCardTravel from '../../../packages/ui/components/cards/BasicCardTravel';\r\nimport { JourneyInterface } from '../../../utils/apis/graphql/types';\r\n\r\nexport interface VoyagesListViewProps{\r\n    title ?: string,\r\n    voyages ?: JourneyInterface[],\r\n    onClik ?:(e:JourneyInterface)=>void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        marginTop: theme.spacing(5)\r\n    },\r\n    gridList:{\r\n        // marginTop : theme.spacing(2),\r\n    },\r\n    title :{\r\n        marginTop : theme.spacing(3),\r\n        marginBottom : theme.spacing(3)\r\n    }\r\n  }),\r\n);\r\n\r\n\r\nconst VoyagesListView :React.FC<VoyagesListViewProps> = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className = {classes.root}>\r\n            <Typography className={classes.title} variant=\"h6\" color=\"primary\">\r\n                {props.title} voyages\r\n            </Typography>\r\n            <GridList \r\n                cellHeight=\"auto\" \r\n                cols={3} \r\n                className = {classes.gridList}\r\n                spacing={4}\r\n            >\r\n                {props.voyages?.map((item, index) => (\r\n                <GridListTile key={index} cols={1}>\r\n                    <BasicCardTravel\r\n                        price = {`${item.price} ${item.devise}`}\r\n                        busNumber={item.cars.codeAppareil}\r\n                        dateDeparture ={`Le ${item.dateDeparture}`}\r\n                        routeNames = {item.routeNames}\r\n                        hourDeparture = {item.hoursDeparture}\r\n                        onClick={()=>{props.onClik && props.onClik(item)}}\r\n                    />\r\n                </GridListTile>\r\n                ))}\r\n            </GridList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VoyagesListView\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Theme, createStyles, makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nexport interface AboutCompanyProps{\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop : theme.spacing(3),\r\n      padding : theme.spacing(2),\r\n      backgroundColor : theme.palette.background.paper,\r\n    },\r\n    title:{\r\n      marginBottom : theme.spacing(2),\r\n    }\r\n  }),\r\n);\r\nconst AboutCompany :React.FC<AboutCompanyProps> = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className={classes.title} variant=\"h6\" color=\"textPrimary\">Apropos de Ttm company</Typography>\r\n            <div>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"textSecondary\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"textSecondary\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"textSecondary\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"textSecondary\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutCompany\r\n","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Theme, createStyles, makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nexport interface FooterGlobalProps{\r\n\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop : theme.spacing(3),\r\n      padding : theme.spacing(2),\r\n      backgroundColor : \"#29292b\",\r\n      color : \"#fff\",\r\n    },\r\n    title:{\r\n      marginBottom : theme.spacing(2),\r\n    }\r\n  }),\r\n);\r\nconst FooterGlobal :React.FC<FooterGlobalProps> = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\">Apropos de Ttm company</Typography>\r\n            <div>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"inherit\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"inherit\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"inherit\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"body1\" color=\"inherit\">\r\n                    Lorem, ipsum dolor sit amet consectetur adipisicing elit. Qui incidunt accusamus, consequuntur, doloremque quasi distinctio error, nam nobis enim rerum pariatur corrupti nesciunt ad illo minus eius quas iusto maiores?\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FooterGlobal\r\n","import React from 'react'\r\n\r\ninterface ErrorLoaderContainerProps{\r\n    loading : boolean;\r\n    error :any;\r\n    data :any;\r\n    children :(e:any)=>React.ReactNode\r\n}\r\n\r\nconst ErrorLoaderContainer:React.FC<ErrorLoaderContainerProps> = ({\r\n    children,\r\n    data,\r\n    error,\r\n    loading\r\n}) => {\r\n    if(loading) return <div>loading...</div>;\r\n    if(error) return <div>Error !</div>\r\n    return (\r\n        <div>\r\n            {children(data)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorLoaderContainer;\r\n","import React from 'react'\r\nimport SearchContainer from '../containers/search';\r\nimport SearchVoyage from '../components/searchVoyage';\r\nimport VoyagesListView from '../containers/voyages';\r\nimport Container from '@material-ui/core/Container'\r\nimport AboutCompany from '../containers/aboutCompany';\r\nimport FooterGlobal from '../containers/footers';\r\n// import { BrowserRouter, Route, Link } from \"react-router-dom\";\r\n// import { useUriHome } from '../providers/services/steperReservation';\r\nimport { useReservations } from '../providers/hooks';\r\nimport { useGetCompanyJourneyPres } from '../../../utils/apis/graphql/queries';\r\nimport ErrorLoaderContainer from \"../components/ErrorLoaderContainer\";\r\nimport { JourneyInterface, ConnexionTypeInterface} from \"../../../utils/apis/graphql/types\";\r\nimport { RouteComponentProps } from 'react-router-dom';\r\ninterface ResultJourneyPres{\r\n    journies: ConnexionTypeInterface<JourneyInterface>\r\n}\r\ninterface HomeClientPage extends RouteComponentProps<{id:any}>{\r\n\r\n}\r\n// eslint-disable-next-line @typescript-eslint/no-redeclare\r\nconst HomeClientPage:React.FC<HomeClientPage> = (props) => {\r\n    // const uriHome = useUriHome();\r\n    const { company } = useReservations();\r\n    const {data, loading, error} = useGetCompanyJourneyPres(1);\r\n    const onSelectJourney = React.useCallback((e:JourneyInterface)=>props.history.push(`/j/${e.id}`),[props.history])\r\n    return (\r\n        <>\r\n            <SearchContainer>\r\n                <SearchVoyage />\r\n            </SearchContainer>\r\n            <Container maxWidth=\"md\" style={{marginTop : 20}}>\r\n                <ErrorLoaderContainer data={data} loading={loading} error ={error}>{\r\n                    (e:ResultJourneyPres)=><VoyagesListView \r\n                        title = {company?.nom}\r\n                        voyages={e.journies.edges.map(item=>item.node)}\r\n                        onClik = { onSelectJourney}\r\n                    />\r\n                }</ErrorLoaderContainer>\r\n                <AboutCompany />               \r\n            </Container>\r\n            <FooterGlobal />  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeClientPage\r\n","import * as React from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\nimport DirectionsBusIcon from '@mui/icons-material/DirectionsBus';\r\nimport Gird from \"@mui/material/Grid\";\r\nimport TextField from '@mui/material/TextField';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Button from '@mui/material/Button';\r\nimport Box from '@mui/material/Box';\r\nimport {Formik, FormikProps } from \"formik\";\r\nimport img from \"../../../utils/assets/gb1.jpg\"\r\nimport { PassengerReserved} from \"../@types/reserve\"\r\n\r\n\r\nexport type InfoType = {title:string, value1:any, value2?:any};\r\n\r\nexport interface CardDetailJourneyProps{\r\n    routes?:string;\r\n    loading?:boolean;\r\n    rightInfo ?: InfoType[],\r\n    leftInfo ?:InfoType[],\r\n    onSubmit ?: (e: PassengerReserved)=>void\r\n\r\n}\r\ninterface InputNumberOfPassangerDetailProps{\r\n    onSubmit ?: (e: PassengerReserved)=>void\r\n}\r\n\r\ninterface ItemInfoProps extends InfoType{\r\n\r\n}\r\n\r\nconst ItemInfo: React.FC<ItemInfoProps> = (props)=>{\r\n    return (\r\n        <List>\r\n            <ListItem\r\n                secondaryAction={\r\n                    props?.value2 && <Typography>{props?.value2}</Typography>\r\n                }\r\n            >\r\n            <ListItemText\r\n                primary={\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                        {props.title}\r\n                    </Typography>\r\n                }\r\n                secondary={<Typography>{props.value1}</Typography>}\r\n            />\r\n            </ListItem>\r\n        </List>\r\n    )\r\n}\r\n\r\nconst InputNumberOfPassangerDetail = React.forwardRef<FormikProps<PassengerReserved>, InputNumberOfPassangerDetailProps>((props,ref)=>{\r\n    const intialValues : PassengerReserved = React.useMemo(()=>({adult:1,baby:0,child:0}),[])\r\n    \r\n    return (\r\n        <Box sx={\r\n            {\r\n                display:\"flex\",\r\n                justifyContent:\"center\"\r\n            }\r\n        }>\r\n            <Formik\r\n                innerRef={ref}\r\n                initialValues={intialValues}\r\n                onSubmit={(value)=>{\r\n                    props.onSubmit && props.onSubmit(value)\r\n                }}\r\n            >{({values, handleChange, errors})=>(\r\n                <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                    <TextField\r\n                        label=\"Nombre d'adulte\" \r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        name = \"adult\"\r\n                        value={values.adult}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        label=\"Nombre d'enfant\" \r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        name = \"child\"\r\n                        value={values.child}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        label=\"Nombre de bebe\" \r\n                        size=\"small\"\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        name = \"baby\"\r\n                        value={values.baby}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Stack>\r\n            )}</Formik>                        \r\n        </Box> \r\n    )\r\n})\r\n\r\n\r\nconst CardDetailJourney:React.FC<CardDetailJourneyProps>= (props) => {\r\n    const [visable, setVisable] = React.useState(false);\r\n    const formikRef = React.useRef<FormikProps<PassengerReserved>>(null);\r\n    \r\n    return (\r\n        <Card sx={{ width:\"100%\" }}>\r\n            <Box sx={{position:\"relative\"}}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    height=\"100\"\r\n                    image={img}\r\n                    alt=\"green iguana\"\r\n                />\r\n                <Box sx={{\r\n                    position: \"absolute\",\r\n                    top: 0,\r\n                    left: 0,\r\n                    height: \"100%\",\r\n                    backgroundImage: \"linear-gradient(357deg,transparent 0%,#0701128c 80%)\",\r\n                    width: \"100%\",\r\n                    p:1\r\n                }}>\r\n                    <Stack direction=\"row\" spacing={1} alignItems=\"center\" sx={{color :\"#fff\"}}>\r\n                        <DirectionsBusIcon  />\r\n                        <Typography color=\"white\" gutterBottom variant=\"subtitle2\">\r\n                            Detail du voyage\r\n                        </Typography>\r\n                    </Stack> \r\n                </Box>\r\n            </Box>\r\n            <CardContent>           \r\n                <div style={{marginTop:2}}>\r\n                    <Box style={{marginLeft:15}}>\r\n                        <Typography gutterBottom variant=\"h6\">\r\n                            { props.routes }\r\n                        </Typography>\r\n                    </Box>\r\n                    <Gird container spacing={4}>\r\n                        <Gird item xs={6}>\r\n                            <List dense>\r\n                                {props?.rightInfo?.map((item, index)=> <ItemInfo key={index} {...item} />)}\r\n                            </List>\r\n                        </Gird>\r\n                        <Gird item xs={6}>\r\n                            <List  dense>\r\n                                {props?.leftInfo?.map((item,index)=> <ItemInfo key={index} {...item}/>)}\r\n                            </List>\r\n                            <Box sx={{\r\n                                    width: \"100%\",\r\n                                    display:\"flex\",\r\n                                    justifyContent:\"right\"\r\n                                }}>\r\n                                    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                        <Button\r\n                                            onClick ={()=>setVisable(state=>!state)}>\r\n                                                {!visable ? \"Reserver\":\"Annuler\"}\r\n                                        </Button>\r\n                                        {visable && <Button \r\n                                            disabled = { props.loading } \r\n                                            onClick={()=>{\r\n                                            if(formikRef.current) {\r\n                                                formikRef.current.handleSubmit()\r\n                                            }\r\n                                        }}>Reserver</Button>}                                        \r\n                                    </Stack>\r\n                            </Box>\r\n                        </Gird>\r\n                    </Gird>\r\n                    {visable && <InputNumberOfPassangerDetail onSubmit={props.onSubmit} ref={formikRef} />}                  \r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardDetailJourney\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const SELECT_RESERVE_JOURNEY = gql`\r\n    mutation SelectJourney($journey:String!, $adult:Int,$child:Int, $baby: Int ){\r\n        selectJourney(input:{\r\n            numberAdult:$adult,\r\n            numberChild:$child,\r\n            numberBaby:$baby,\r\n            journey : $journey,\r\n        }){\r\n            id\r\n            numberAdult\r\n            numberChild\r\n            numberBaby\r\n            lastStep\r\n            sessionKey\r\n            folder\r\n            errors{\r\n                field\r\n                messages\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const VALIDATION_PAYEMENT_MUTAION = gql`\r\n  mutation ValidePayement(\r\n      $session :String!,\r\n      $provider: String!\r\n      $confirmed: Boolean!\r\n      $costTotal: String!\r\n      $datePayment: DateTime!\r\n    ) {\r\n      validePayement(\r\n        input: {\r\n          session:$session,\r\n          provider: $provider\r\n          confirmed: $confirmed\r\n          costTotal: $costTotal\r\n          datePayment: $datePayment\r\n        }\r\n      ) {\r\n        id\r\n        provider\r\n        confirmed\r\n        costTotal\r\n        datePayment\r\n        errors {\r\n          field\r\n          messages\r\n        }\r\n      }\r\n  }\r\n`;\r\n\r\nexport const DETAIL_INPUT_INFOS = gql`\r\n  mutation DetailInfosMuation(\r\n    $session:String!,\r\n    $firstname: String!,\r\n    $middlename: String!,\r\n    $lastname: String!,\r\n    $email: String!,\r\n    $numTelEmergency: String!,\r\n    $pieceId: String!,\r\n    $numTel:String!,\r\n    $numPieceId: String!,\r\n    $adressFrom: String!,\r\n    $adressTo: String!,\r\n    $degreParent:String!,\r\n    $birthDay: Date!,\r\n    $id: Int\r\n  ) {\r\n    infoDetails(\r\n      input: {\r\n        session:$session,\r\n        firstname: $firstname,\r\n        middlename: $middlename,\r\n        lastname: $lastname,\r\n        email: $email,\r\n        numTel : $numTel,\r\n        numTelEmergency: $numTelEmergency,\r\n        pieceId: $pieceId,\r\n        numPieceId: $numPieceId,\r\n        degreParent :$degreParent,\r\n        adressFrom: $adressFrom,\r\n        adressTo: $adressTo,\r\n        birthDay: $birthDay,\r\n        id: $id\r\n      }\r\n    ) {\r\n      id\r\n      firstname\r\n      middlename\r\n      lastname\r\n      degreParent\r\n      email\r\n      numTel\r\n      numTelEmergency\r\n      pieceId\r\n      numPieceId\r\n      adressFrom\r\n      adressTo\r\n      birthDay\r\n      dateCreated\r\n      errors {\r\n        field\r\n        messages\r\n      }\r\n    }\r\n  }\r\n\r\n`;\r\n\r\n\r\nexport const INPUT_INFO_PASSENGER_STEP = gql`\r\n    mutation OnReserveInfoPassengers($session:String!, $passengers : [PassengerSerializerInput]!){\r\n  reserveInfoPassengers(input:{\r\n    session :$session,\r\n    passengers : $passengers\r\n  }){\r\n    errors{\r\n      field\r\n      messages\r\n    }\r\n    journeySelected{\r\n      id\r\n      lastStep\r\n      passengers{\r\n        edges{\r\n          cursor\r\n          node{\r\n            id\r\n            firstname\r\n            middlename\r\n            lastname\r\n            typeUser\r\n            birthDay\r\n            gender\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import { useMutation } from \"@apollo/client\";\r\nimport { \r\n    SELECT_RESERVE_JOURNEY, \r\n    VALIDATION_PAYEMENT_MUTAION,\r\n    DETAIL_INPUT_INFOS,\r\n    INPUT_INFO_PASSENGER_STEP,\r\n} from \"./mutations_string\";\r\n\r\nconst useBaseMuation = (gql:any)=>useMutation(gql);\r\nexport const useSelectJourney = ()=>useBaseMuation(SELECT_RESERVE_JOURNEY)\r\nexport const usePassengerInfoStepMutation = ()=>useBaseMuation(INPUT_INFO_PASSENGER_STEP)\r\nexport const useDetailInfoInputStepMutation = ()=>useBaseMuation(DETAIL_INPUT_INFOS)\r\nexport const useValidationInputStepMutation = ()=>useBaseMuation(VALIDATION_PAYEMENT_MUTAION)","\r\nimport React from 'react';\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport Container from \"@mui/material/Container\";\r\nimport CardDetailJourney,{CardDetailJourneyProps} from '../containers/CardDetail';\r\nimport { PassengerReserved } from '../@types/reserve';\r\nimport { useSelectJourney } from '../../../utils/apis/graphql/mutation';\r\nimport { useDetailJourney } from '../../../utils/apis/graphql/queries';\r\nimport AboutCompany from '../containers/aboutCompany';\r\nimport FooterGlobal from '../containers/footers';\r\nimport Toolbar  from '@mui/material/Toolbar';\r\ninterface DetailPageProps extends RouteComponentProps<{id:any}>{\r\n\r\n}\r\n\r\n\r\nconst DetailPage :React.FC<DetailPageProps> = (props) => {\r\n    const [handlerSubmitMuation ,{loading}] = useSelectJourney();\r\n    const {data: detailDetail, loading:detailLoading , error } = useDetailJourney(props.match.params.id)\r\n\r\n    console.log(detailDetail)\r\n    const names = React.useCallback((values: {label:string, value:number}[])=>{\r\n        return values.map(item=>item.label).join(\" - \")\r\n    },[])\r\n    const {leftInfo, rightInfo, routes} = React.useMemo(()=>{\r\n        if(detailDetail){\r\n            const { journey } = detailDetail;\r\n            const routes = names(journey.trajets) \r\n            const rightInfo : CardDetailJourneyProps[\"rightInfo\"] = [\r\n                {title:\"Date de depart\", value1:journey.dateDeparture,value2:journey.hoursDeparture},\r\n                {title:\"Date d'arrivee\", value1:journey.dateReturn, value2:journey.hoursReturn},\r\n                {title:\"Prix\", value1: journey.price,value2: journey.devise}\r\n            ]\r\n\r\n            const leftInfo :CardDetailJourneyProps[\"leftInfo\"] = [\r\n                {title:\"Voiture\", value1:journey.cars.codeAppareil},\r\n                {title:\"Place total\", value1:journey.cars.configCab.numberOfSeats,},\r\n                {title:\"Place reservee\", value1:journey.numberOfPlacesReserved}\r\n            ]\r\n\r\n            return {\r\n                rightInfo,\r\n                leftInfo,\r\n                routes,\r\n                isDirect : journey.isDirect,\r\n                exprired : journey.exprired\r\n            }\r\n        }\r\n        return {\r\n            rightInfo : [],\r\n            leftInfo :[]\r\n        }\r\n    },[detailDetail])\r\n    \r\n    \r\n    const handlerSubmit = React.useCallback((value:PassengerReserved)=>{\r\n        handlerSubmitMuation({\r\n            variables: {journey: props.match.params.id,...value}\r\n        }).then(({data})=>{\r\n            props.history.push(`/res/${data.selectJourney.id}`)\r\n        }).catch(error=>{\r\n            console.log(error)\r\n        })\r\n    },[handlerSubmitMuation, props.match.params.id, props.history])\r\n    if (detailLoading) return <div>loading...</div>\r\n    if (error) return <div>error ...</div>\r\n    return (\r\n        <React.Fragment>\r\n            <Toolbar />\r\n            <Container maxWidth=\"md\" style={{marginTop : 20}}>\r\n                <CardDetailJourney\r\n                    routes = {routes}\r\n                    loading = {loading}\r\n                    onSubmit = { handlerSubmit }\r\n                    rightInfo = {rightInfo}\r\n                    leftInfo = {leftInfo}\r\n                />\r\n                <AboutCompany />               \r\n            </Container>\r\n            <FooterGlobal /> \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default DetailPage;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\n\r\nexport interface ButtonNextPreviousProps{\r\n    currentStep :number;\r\n    stepLenght :number;\r\n    goPrivious ?: ()=>void;\r\n    goNext ?: ()=>void;\r\n} \r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        width: '100%',\r\n        marginTop:theme.spacing(3),\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignContent: \"space-around\",\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(5),\r\n    },\r\n  }),\r\n);\r\n\r\n\r\nconst ButtonNextPrevious:React.FC<ButtonNextPreviousProps> = ({\r\n    currentStep,stepLenght,goNext,goPrivious\r\n}) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.root}>\r\n            <Button \r\n                className ={classes.button}\r\n                disableElevation\r\n                disabled={currentStep === 0} \r\n                onClick={goPrivious}>\r\n                Precendant\r\n            </Button>\r\n            <Button\r\n                disableElevation\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={goNext}\r\n            >\r\n                {currentStep === stepLenght - 1 ? 'Finir' : 'Suivant'}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonNextPrevious\r\n","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport moment from \"moment\";\r\nimport { Formik, FormikProps } from \"formik\";\r\nimport * as yup from 'yup';\r\nimport { Passenger} from '../../@types/personnal';\r\nimport DateInput from '../../../../packages/ui/components/inputs/DateInput';\r\n\r\nexport interface PassengerInputProps{\r\n    type  : \"adult\"| \"child\" | \"baby\";\r\n    keyId ?: any;\r\n    value ?: Passenger;\r\n    onSubmit?: (e:Passenger)=>void\r\n}\r\n\r\nconst REQUIRED_MESSAGE = \"chant requis!\";\r\nexport const SchemasPassengerInput = yup.object().shape({\r\n    firstname : yup.string().required(REQUIRED_MESSAGE),\r\n    middlename : yup.string().required(REQUIRED_MESSAGE),\r\n    lastname : yup.string().required(REQUIRED_MESSAGE),\r\n    gender : yup.string().required(REQUIRED_MESSAGE),\r\n    birthDay: yup.string().required(REQUIRED_MESSAGE)\r\n})\r\n\r\nconst PassengerInput = React.forwardRef<FormikProps<Passenger>,PassengerInputProps>((props, ref) => {\r\n    const initialValues :Passenger = React.useMemo(()=>({\r\n        birthDay : moment().format('YYYY-MM-DD'),\r\n        firstname :\"\",\r\n        middlename:\"\",\r\n        lastname:\"\",\r\n        gender:\"H\",\r\n        typeUser: props.type,\r\n        key : props.keyId,\r\n        ...props.value,\r\n    }),[props.keyId, props.type, props.value])\r\n\r\n    return (\r\n        <Formik\r\n            innerRef = {ref}\r\n            enableReinitialize\r\n            initialValues={initialValues}\r\n            validationSchema={SchemasPassengerInput}\r\n            onSubmit = {(value)=>{\r\n                props.onSubmit && props.onSubmit(value);\r\n            }}\r\n        >{({values, handleChange, setFieldValue, errors})=>(\r\n            <React.Fragment>\r\n                <Grid container spacing={1} style={{marginTop:10}}>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            error = {Boolean(errors.firstname)}\r\n                            helperText = { errors.firstname}\r\n                            variant =\"outlined\"\r\n                            size =\"small\"\r\n                            name = \"firstname\"\r\n                            label = \"Noms\"\r\n                            value = {values.firstname}\r\n                            onChange ={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            error = {Boolean(errors.middlename)}\r\n                            helperText = { errors.middlename}\r\n                            variant =\"outlined\"\r\n                            size =\"small\"\r\n                            name = \"middlename\"\r\n                            label = \"Postnom\"\r\n                            value = {values.middlename}\r\n                            onChange ={handleChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            error = {Boolean(errors.lastname)}\r\n                            helperText = { errors.lastname}\r\n                            variant =\"outlined\"\r\n                            size =\"small\"\r\n                            name = \"lastname\"\r\n                            label = \"Prenom\"\r\n                            value = {values.lastname}\r\n                            onChange ={handleChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={5}>\r\n                        <DateInput\r\n                            style={{marginTop:10}}\r\n                            label=\"Date de naissance\" \r\n                            onChange={d=>setFieldValue(\"birthDay\",d)}\r\n                        />\r\n                    </Grid>            \r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            style={{marginBottom:8}}\r\n                            select\r\n                            // variant =\"outlined\"\r\n                            size =\"small\"\r\n                            name = \"gender\"\r\n                            label = \"Sexe\"\r\n                            value = {values.gender}\r\n                            onChange ={handleChange}\r\n                        >\r\n                            <MenuItem value=\"F\">F</MenuItem>\r\n                            <MenuItem value=\"H\">H</MenuItem>\r\n                            <MenuItem value=\"I\">INDERTERMINE</MenuItem>\r\n                        </TextField>\r\n                    </Grid>\r\n                </Grid>\r\n            </React.Fragment>\r\n        )}</Formik> \r\n    )\r\n})\r\n\r\nexport default PassengerInput;\r\n","import * as React from 'react';\r\nimport {ReservationContextInterface, ReservationActionInterface} from \"./step-reservation-interface\";\r\n\r\nconst initialState :ReservationContextInterface = {\r\n    passengers: [],\r\n    session:\"\",\r\n    lastStep:0,\r\n    activeStep:0,\r\n    selectedPassenger : null,\r\n    trajets :[],\r\n    cars:null,\r\n    adult:1,\r\n    baby:0,\r\n    child:0,\r\n    id:null,\r\n}\r\n\r\n\r\nfunction reducer(state: ReservationContextInterface, action: ReservationActionInterface): ReservationContextInterface {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case 'set_step':\r\n            return {...state, lastStep : action.payload}\r\n        case 'set_session':\r\n            return {...state, session : action.payload}\r\n        case 'set_active_step':\r\n            return {...state, activeStep : action.payload}\r\n        case 'set_seating':\r\n            const lastStep = action.payload.lastStep;\r\n            return { ...state, \r\n                lastStep ,\r\n                activeStep : lastStep,\r\n                passengers : action.payload.passengers,\r\n                cars : action.payload.cars,\r\n                journeySeats : action.payload.journeySeats,\r\n            }\r\n        case 'initialise':\r\n            return {...state, ...action.payload}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const StepReservationContext = React.createContext<ReservationContextInterface>(initialState);\r\n\r\ninterface StepValueInit {\r\n    adult:number,\r\n    baby:number,\r\n    child:number,\r\n    id?:any,\r\n    session :string;\r\n    lastStep : number;\r\n    activeStep :number;\r\n    passengers ?: any[];\r\n    trajets ?:any[],\r\n    cars ?: any;\r\n}\r\n\r\nexport const StepReservationProvider: React.FC<{value: StepValueInit}> = ({ children, value }) => {\r\n    const [_value, setValue] = React.useReducer(reducer, initialState);\r\n    const setStep = React.useCallback((e:ReservationActionInterface)=>setValue(e),[]);\r\n    React.useEffect(()=>{\r\n        setValue({\r\n            type: \"initialise\",\r\n            payload : value\r\n        });\r\n    },[value])\r\n    return <StepReservationContext.Provider value={{..._value, setStep}}>{children}</StepReservationContext.Provider>\r\n}","import * as React from 'react'\r\nimport { Container, Typography,Grid, Paper} from '@material-ui/core'\r\nimport { FormikProps } from 'formik'\r\nimport { useSteperAction } from '../../providers/services/steperReservation'\r\nimport ButtonNextPrevious from '../../components/ButtonNextPrevious';\r\nimport PassengerInput from '../../components/Personnal/PassengerInput'\r\nimport { Passenger } from '../../@types/personnal'\r\nimport { usePassengerInfoStepMutation } from '../../../../utils/apis/graphql/mutation';\r\nimport { StepReservationContext } from \"./context-reservations\";\r\n\r\n\r\n\r\nconst createRefPassenger = ( index:number, value ?: any )=>{\r\n    const ref = React.createRef<FormikProps<Passenger>>();\r\n    let newValue = undefined;\r\n    if(value){\r\n        const {typeUser, __typename, dateCreated,  ...rest } = value;\r\n        newValue = {\r\n            ...rest,\r\n            typeUser : String(typeUser).toLowerCase()\r\n        }\r\n    }\r\n    \r\n    return {\r\n        ref,\r\n        value : newValue,\r\n        index: index + 1\r\n    }\r\n}\r\n\r\nexport interface StepPassengerContainerProps{\r\n   \r\n}\r\nconst StepPassengerContainer = React.forwardRef<any,StepPassengerContainerProps>((props, ref) => {\r\n    const {session, passengers ,adult, child, baby, setStep} = React.useContext(StepReservationContext);\r\n\r\n    const { currentStep, goPrivious }  = useSteperAction();\r\n    const [handlerSubumitMut] = usePassengerInfoStepMutation()\r\n\r\n    const getValuePassangerByType = React.useCallback((value:number, type :\"ADULT\"|\"CHILD\"|\"BABY\")=>{\r\n        const adlt = passengers?.filter(adult=>adult.typeUser === type)\r\n            .map((item, index)=>createRefPassenger(index, item));\r\n        if(adlt?.length === value) return adlt;\r\n        return Array.from(Array(value).keys()).map((item, index)=>createRefPassenger(index))\r\n    },[passengers]);\r\n\r\n    const AdultList = React.useMemo(\r\n        ()=>getValuePassangerByType(adult, \"ADULT\"),\r\n    [adult, getValuePassangerByType]);\r\n\r\n    \r\n    const BabyList = React.useMemo(\r\n        ()=>getValuePassangerByType(baby, \"BABY\"),\r\n    [baby, getValuePassangerByType]);\r\n\r\n    const ChildList = React.useMemo(\r\n        ()=>getValuePassangerByType(child, \"CHILD\"),\r\n    [child, getValuePassangerByType]);\r\n\r\n    // on valide user passenger end prevent error (empty value)\r\n    const onValideUserPassenger = React.useCallback((e: (FormikProps<Passenger> | null)[])=>{\r\n        let values:any[]= []\r\n        for (let index = 0; index < e.length; index++) {\r\n            const element = e[index];\r\n            if(!element) return;\r\n            if(!element.isValid) return;\r\n            const { key, typeUser ,...restOfValues } = element.values\r\n            values.push({...restOfValues, typeUser: typeUser.toUpperCase()});\r\n        }\r\n\r\n        handlerSubumitMut({\r\n            variables:{\r\n                session,\r\n                passengers: values\r\n            }\r\n        }).then(res=>{\r\n            const {journeySelected } = res.data.reserveInfoPassengers ;\r\n            if(setStep){\r\n                setStep({\r\n                    type:\"set_seating\",\r\n                    payload: {\r\n                        lastStep : journeySelected.lastStep,\r\n                        activeStep : journeySelected.lastStep,\r\n                        journeySeats: journeySelected.journey.journeySeats.edges?.map((selected:any)=>selected.node),\r\n                        passengers : journeySelected.passengers.edges?.map((user:any)=>user.node),\r\n                        cars : journeySelected.journey.cars,\r\n                    }\r\n                })\r\n            } \r\n        }).catch(error=>{\r\n            console.log(error.networkError?.result)\r\n            console.log(JSON.stringify(error))\r\n        })\r\n    },[handlerSubumitMut, session, setStep]);\r\n\r\n\r\n    const handlerSubmit = React.useCallback(()=>{\r\n        const allRefs = AdultList\r\n            .map(item=>item.ref.current)\r\n            .concat(ChildList.map(item=>item.ref.current))\r\n            .concat(BabyList.map(item=>item.ref.current))        \r\n        allRefs.map(item=>item?.handleSubmit());\r\n        onValideUserPassenger(allRefs)\r\n    },[AdultList, BabyList, ChildList, onValideUserPassenger]);\r\n    \r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"md\">\r\n                <div style={{marginTop:30}}>\r\n                    <Typography variant=\"h6\">Adultes ({adult})</Typography>\r\n                    <Grid container spacing={1}>\r\n                        {\r\n                            AdultList.map(item=>(\r\n                                <Grid item key={item.index} style={{marginTop:0}}>\r\n                                    <Paper \r\n                                        variant=\"outlined\"\r\n                                        style={{padding:15}}\r\n                                    >\r\n                                        <Typography>Adult ({item.index})</Typography>\r\n                                        <PassengerInput \r\n                                            type=\"adult\"\r\n                                            keyId = {\"adult\"+item.index}\r\n                                            ref = { item.ref}\r\n                                            value = { item.value}\r\n                                        />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))\r\n                        }\r\n                        \r\n                    </Grid>\r\n                </div>\r\n                <div style={{marginTop:30}}>\r\n                    <Typography variant=\"h6\">Enfant ({child})</Typography>\r\n                    <Grid container spacing={1}>\r\n                        {\r\n                            ChildList.map(item=>(\r\n                                <Grid item key={item.index} style={{marginTop:20}}>\r\n                                    <Paper\r\n                                        variant=\"outlined\"\r\n                                        style={{padding:15}}\r\n                                    >\r\n                                        <Typography>Enfant ({item.index})</Typography>\r\n                                        <PassengerInput \r\n                                            type=\"child\"\r\n                                            keyId = {\"child\"+item.index}\r\n                                            ref = { item.ref}\r\n                                            value = { item.value}\r\n                                        />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            ))\r\n                        }\r\n                        \r\n                    </Grid>\r\n                </div>\r\n                <div style={{marginTop:30}}>\r\n                    <Typography variant=\"h6\">Bebe ({baby})</Typography>\r\n                    <Grid container spacing={1}>\r\n                        {\r\n                            BabyList.map(item=>(\r\n                                <Grid item key={item.index} style={{marginTop:20}}>\r\n                                    <Paper\r\n                                        variant=\"outlined\"\r\n                                        style={{padding:15}}\r\n                                    >\r\n                                        <Typography>Bebe ({item.index})</Typography>\r\n                                        <PassengerInput\r\n                                            type=\"baby\"\r\n                                            keyId = {\"baby\"+item.index}\r\n                                            ref = { item.ref}\r\n                                            value = { item.value}\r\n                                        />\r\n                                    </Paper>        \r\n                                </Grid>\r\n                            ))\r\n                        }\r\n                        \r\n                    </Grid>\r\n                </div>\r\n                <ButtonNextPrevious\r\n                    stepLenght ={5}\r\n                    currentStep={currentStep}\r\n                    goNext ={handlerSubmit}\r\n                    goPrivious ={goPrivious}\r\n                />\r\n            </Container>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default StepPassengerContainer\r\n","import * as React from 'react';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { Formik , FormikProps, FormikHelpers } from \"formik\";\r\n\r\nexport interface MobileBankingInitialValueInterface{\r\n    provider : any;\r\n    session :string | null;\r\n    confirmed:boolean | null;\r\n    costTotal :number|string;\r\n}\r\n\r\nexport type refMobilBankingType =  FormikProps<MobileBankingInitialValueInterface>;\r\nexport type submitMobilBankingTypeFuncType =  (\r\n    values: MobileBankingInitialValueInterface,\r\n    formikHelpers: FormikHelpers<MobileBankingInitialValueInterface>\r\n)=>void;\r\n\r\nexport interface MobilBankingProps{\r\n    provider ?: any;\r\n    initialValues ?: MobileBankingInitialValueInterface;\r\n    onSubmit ?: submitMobilBankingTypeFuncType\r\n}\r\n\r\n/** @type {*} \r\n * hello docs\r\n*/\r\nconst MobilBanking = React.forwardRef<refMobilBankingType, MobilBankingProps>(({onSubmit, initialValues}, ref) => {\r\n    const _initialValues : MobileBankingInitialValueInterface = React.useMemo(()=>{\r\n        return {\r\n            confirmed : null,\r\n            provider :null,\r\n            costTotal:0,\r\n            session :null,\r\n            ...initialValues,\r\n        }\r\n    },[initialValues]);\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                innerRef= { ref }\r\n                initialValues = { _initialValues }\r\n                onSubmit = {(values, helpers)=>{\r\n                    onSubmit && onSubmit(values, helpers)\r\n                }}\r\n            >\r\n                {({values})=>(\r\n                    <Box>\r\n                        <Typography textAlign=\"center\" variant=\"h3\">{values.costTotal}</Typography>\r\n                    </Box>\r\n                )}\r\n            </Formik>            \r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MobilBanking;\r\n","import * as React from 'react';\r\nimport MobileBanking, { refMobilBankingType, MobileBankingInitialValueInterface, submitMobilBankingTypeFuncType} from \"./MobilBanking\";\r\n\r\ninterface PaymentInputsProps {\r\n    type ?: \"mobile\";\r\n    refInput : React.Ref<refMobilBankingType>;\r\n    initialValue ?: MobileBankingInitialValueInterface;\r\n    onSubmit ?: submitMobilBankingTypeFuncType\r\n}\r\n\r\nconst PaymentInputs: React.FC<PaymentInputsProps> = ({refInput, initialValue, onSubmit})=>{\r\n    return <MobileBanking ref={refInput} initialValues={initialValue} onSubmit={onSubmit}/>\r\n}\r\n\r\nexport default PaymentInputs;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport Stack from '@mui/material/Stack';\r\nimport Radio from '@mui/material/Radio';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport Payment from \"./Payment\";\r\nimport { refMobilBankingType, MobileBankingInitialValueInterface } from \"./Payment/MobilBanking\";\r\nimport { FormikHelpers } from 'formik';\r\nexport interface CardPaymentModeSelectProps{\r\n    selected : boolean;\r\n    title : string;\r\n    image ?: any;\r\n    onSelect : ()=>void\r\n}\r\n\r\nexport interface PayementModeProps {\r\n    initialValue ?: MobileBankingInitialValueInterface,\r\n    onSubmit ?: (\r\n        values: MobileBankingInitialValueInterface,\r\n        formikHelpers: FormikHelpers<MobileBankingInitialValueInterface>\r\n    )=>void;\r\n}\r\n\r\n\r\nconst CardPaymentModeSelect :React.FC<CardPaymentModeSelectProps> = ({image, title, selected, onSelect})=>{\r\n    return (\r\n        <Box margin={1}>\r\n            <Stack flexDirection=\"row\" alignItems=\"center\">\r\n                <Radio checked={selected}/>\r\n                <Card variant=\"outlined\" sx={{ \r\n                        '& .MuiCardContent-root:last-child':{\r\n                            padding: 0\r\n                        },\r\n                        '& .MuiCardContent-root':{\r\n                            padding: 0\r\n                        }\r\n                    }}>\r\n                    <CardContent>\r\n                        <CardActionArea onClick={onSelect} sx={{\r\n                            p:3,\r\n                            display :\"flex\",\r\n                            justifyContent:\"center\",\r\n                            alignItems:\"center\",\r\n                        }}>\r\n                            {\r\n                                image ? (\r\n                                    <img alt=\"log\" src={image} height={40} width={60}/>\r\n                                ):(\r\n                                    <Typography\r\n                                        height={40} width={60} \r\n                                        textAlign=\"center\" \r\n                                        color=\"GrayText\" \r\n                                        variant =\"subtitle2\"\r\n                                    >{title}</Typography>\r\n                                )\r\n                            }\r\n                        </CardActionArea>\r\n                    </CardContent>\r\n                </Card>\r\n            </Stack>            \r\n        </Box>\r\n    )\r\n};\r\n\r\nconst paymentMode : {\r\n    title :string;\r\n    image?:any;\r\n}[]= [\r\n    {\r\n        title : \"Payment en cash\",\r\n    },\r\n]\r\n\r\nconst PayementMode = React.forwardRef<refMobilBankingType, PayementModeProps>(({initialValue, onSubmit}, ref) => {\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ \r\n            p: 4,\r\n        }}>\r\n            <Stack flexDirection=\"row\" flexWrap=\"wrap\">\r\n                {\r\n                    paymentMode.map((item, index)=>{\r\n                        return (\r\n                            <CardPaymentModeSelect\r\n                                onSelect = {()=>handleChange(index)}\r\n                                image = { item?.image}\r\n                                title = { item.title}\r\n                                key={index}  \r\n                                selected={index===value} \r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </Stack>\r\n            <Box marginTop={3} marginBottom = {3}>\r\n                <Payment refInput = {ref} initialValue={initialValue} onSubmit={onSubmit}/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n})\r\n\r\nexport default React.memo(PayementMode);\r\n","import React from 'react'\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Stack  from '@mui/material/Stack';\r\n\r\nexport interface ListItemCostDetailProps{\r\n    label :string;\r\n    value :string;\r\n    divider ?: boolean;\r\n    description ?:string;\r\n}\r\n\r\nexport interface CardCostDetailProps{\r\n    items : ListItemCostDetailProps[]\r\n}\r\n\r\nconst ListItemCostDetail:React.FC<ListItemCostDetailProps> = ({label, value, divider, description})=>{\r\n    return (\r\n        <Box marginTop={1} marginBottom ={1}>\r\n            { divider && <Divider />}\r\n            <Stack flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Typography variant=\"overline\" >{label.toLocaleUpperCase()}</Typography>\r\n                <Typography variant=\"subtitle2\">{value}</Typography>\r\n            </Stack>\r\n            {description && <Typography color=\"GrayText\" variant=\"caption\">{description}</Typography>}\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst CardCostDetail = React.forwardRef<any, CardCostDetailProps>(({items}, ref) => {\r\n    return (\r\n        <Box>\r\n            <Typography marginBottom={1} variant=\"subtitle2\">Sommaire</Typography>\r\n            <Typography\r\n                marginBottom={3}\r\n                variant=\"caption\"\r\n                color=\"GrayText\"\r\n            >Lorem ipsum dolor sit, amet consectetur adipisicing elit. Repellat sunt cum at</Typography>\r\n            {items.map((item, index)=> <ListItemCostDetail key={index} {...item}/>)}\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default React.memo(CardCostDetail);\r\n","import React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Button from \"@mui/material/Button\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Container from \"@mui/material/Container\";\r\nimport PayementMode from '../../components/PayementMode';\r\nimport CardCostDetail from '../../components/CardCostDetail';\r\nimport { StepReservationContext } from './context-reservations';\r\nimport { MobileBankingInitialValueInterface, refMobilBankingType, submitMobilBankingTypeFuncType } from '../../components/Payment/MobilBanking';\r\n\r\nexport interface StepPaymentContainerProps {\r\n\r\n}\r\nconst StepPaymentContainer :React.FC<StepPaymentContainerProps> = (props) => {\r\n    const objectRef = React.useRef<refMobilBankingType>(null);\r\n    const {session} = React.useContext(StepReservationContext);\r\n\r\n    const initialValues : MobileBankingInitialValueInterface = React.useMemo(()=>{\r\n        return {\r\n            session,\r\n            confirmed:false,\r\n            costTotal: \"2345 USD\",\r\n            provider:\"CASH\"\r\n        }\r\n    },[session]);\r\n\r\n    // callback on submiting forms\r\n    const onSubmit :submitMobilBankingTypeFuncType = React.useCallback((value, helpers)=>{\r\n        console.log(value, helpers)\r\n    },[]);\r\n\r\n    // handler binding to the button\r\n    const handlerSubmit = React.useCallback(\r\n        () => objectRef.current?.handleSubmit()\r\n    ,[])\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Divider />\r\n            <br />\r\n            <PayementMode \r\n                onSubmit = { onSubmit }\r\n                initialValue = { initialValues} \r\n                ref={objectRef}\r\n            />\r\n            <Paper elevation={0} sx={{\r\n                p:2,\r\n                backgroundColor: \"#f5f5f5\",\r\n                mb:3\r\n            }}>\r\n                <CardCostDetail\r\n                    items={[\r\n                        {\r\n                            label : \"adults\",\r\n                            value : \"234 usd\",\r\n                            description :\"23 adults pour deux trajet de kasungami\"\r\n                        },\r\n                        {\r\n                            label : \"enfants\",\r\n                            value : \"234 usd\",\r\n                            description :\"23 adults pour deux trajet de kasungami\"\r\n                        },\r\n                        {\r\n                            label :\"Total\",\r\n                            value :\"2345 usd\",\r\n                            divider : true\r\n                        }\r\n                    ]}\r\n                />\r\n            </Paper>\r\n            <Button \r\n                fullWidth \r\n                variant =\"contained\" \r\n                disableElevation\r\n                onClick = { handlerSubmit }\r\n            >\r\n                Confirmer le payement\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default StepPaymentContainer;\r\n","import React from 'react';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { ClientPlaceReservations, CabineConfigurationInterface, CabineFuncActionType, SeatsInterface } from \"../../../packages/seatings\";\r\nimport SeatPlace from \"../../../packages/seatings/components/SeatPlace\";\r\n\r\n\r\nexport interface SeatPassgerSelectionProps{\r\n    config ?: Partial<CabineConfigurationInterface>;\r\n    users ?: any[];\r\n    onSelectPlace ?: ( e:any )=>void;\r\n    clientActionButtonGroup ?: React.ReactNode\r\n}\r\n\r\nconst SeatPassgerSelection = React.forwardRef<any, SeatPassgerSelectionProps>(({users, config, onSelectPlace, clientActionButtonGroup}, ref) => {\r\n    const  dispatcherRef = React.useRef<any>();\r\n    const [open, setOpen] = React.useState<boolean>(false);\r\n    const [place, setPlace] = React.useState<SeatsInterface | undefined | null>(null)\r\n    const [selected, setSelected] = React.useState<any>(undefined);\r\n\r\n    const handleOpen = React.useCallback(()=>setOpen(true),[]);\r\n    // \r\n    const handleClose = React.useCallback(()=>{\r\n        setOpen(false);\r\n        setPlace(null);\r\n    },[]);\r\n    // \r\n\r\n    const handlerReservation : CabineFuncActionType = React.useCallback(\r\n        (reservations, type, seat, user )=>{\r\n            console.log(reservations, type, seat, user);\r\n            setPlace(seat);\r\n            handleOpen();\r\n    },[handleOpen]);\r\n\r\n   \r\n\r\n    const handlerValidate = React.useCallback(()=>{\r\n        const values = dispatcherRef.current.values;\r\n        // dispatch reservation of passenger\r\n        values  && dispatcherRef.current?.handlerDispatch(values.type, values.data);\r\n        // action props on selected passenger\r\n        onSelectPlace && onSelectPlace(values);\r\n        handleClose()\r\n    },[handleClose, onSelectPlace])\r\n\r\n    React.useEffect(() => {\r\n        if(users && users?.length > 0){\r\n            const fistUser = users[0];\r\n            setSelected(fistUser);\r\n        }\r\n    }, [users]);\r\n\r\n    React.useImperativeHandle(ref, () => ({\r\n        selected,\r\n        values : dispatcherRef\r\n    }))\r\n    return (\r\n        <div>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={3}>\r\n                    <Typography variant=\"subtitle2\">Passagers</Typography>\r\n                    <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper' }}>\r\n                        {users?.map((value, index) => {\r\n                            const labelId = `checkbox-list-label-${value?.id}`;\r\n\r\n                            return (\r\n                                <ListItem\r\n                                    key={index}\r\n                                    // secondaryAction={\r\n                                    // <IconButton edge=\"end\" aria-label=\"comments\">\r\n                                    //     <CommentIcon />\r\n                                    // </IconButton>\r\n                                    // }\r\n                                    disablePadding\r\n                                >\r\n                                    <ListItemButton role={undefined} onClick={()=>setSelected(value)} dense>\r\n                                    \r\n                                    <ListItemIcon>\r\n                                        {\r\n                                        value?.id === selected?.id && (\r\n                                            <DoneIcon fontSize=\"small\" color=\"success\"/>\r\n                                        )}\r\n                                    </ListItemIcon>\r\n                                        <ListItemText \r\n                                            id={labelId} \r\n                                            primary= {value.firstname}\r\n                                            secondary ={value.lastname}\r\n                                        />\r\n                                    </ListItemButton>\r\n                                </ListItem>\r\n                            );\r\n                        })}\r\n                    </List>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                    <ClientPlaceReservations\r\n                        ref = { dispatcherRef }\r\n                        configuration = {config}\r\n                        user = { selected?.id || \"inconnito\"}\r\n                        actions = { handlerReservation } \r\n                        clientActionButtonGroup = {clientActionButtonGroup}     \r\n                    />\r\n                    <Dialog\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"alert-dialog-title\"\r\n                        aria-describedby=\"alert-dialog-description\"\r\n                    >\r\n                        <DialogTitle id=\"alert-dialog-title\">\r\n                            Reservation places\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <Grid container spacing={4}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography component=\"h4\" variant=\"h6\">Passanger</Typography>\r\n                                    <br />\r\n                                    <Typography variant=\"subtitle2\">Nom : {selected?.firstname}</Typography>\r\n                                    <Typography variant=\"subtitle2\">Postnom : {selected?.middlename}</Typography>\r\n                                    <Typography variant=\"subtitle2\">Prenom : {selected?.lastname}</Typography>\r\n                                    <Typography variant=\"subtitle2\">Type : {selected?.typeUser}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <br />\r\n                                    <Stack flexDirection=\"column\" alignItems=\"center\">\r\n                                        <SeatPlace \r\n                                            style={{height:100, width:100, marginBottom: 5}}\r\n                                            modeDev \r\n                                            variant=\"contained\" \r\n                                            color=\"success\"\r\n                                        />\r\n                                        <Typography variant=\"subtitle2\">{place?.id} / {place?.name}</Typography>\r\n                                    </Stack>                            \r\n                                </Grid>\r\n                            </Grid>\r\n                            <br />\r\n                            <DialogContentText id=\"alert-dialog-description\" variant=\"caption\" justifyContent=\"stretch\">\r\n                                Lorem ipsum dolor sit amet consectetur adipisicing elit. Itaque enim ipsam assumenda.\r\n                                Accusantium tempora molestiae fugiat officia. Aperiam officiis voluptate, \r\n                                suscipit itaque expedita, laborum in qui, exercitationem blanditiis a consequuntur.\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={handleClose}>Annuler</Button>\r\n                            <Button onClick={handlerValidate} autoFocus>\r\n                                Valider\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n})\r\nexport default SeatPassgerSelection\r\n","import * as React from 'react';\r\nimport Container from '@mui/material/Container';\r\nimport { StepReservationContext} from \"./context-reservations\";\r\nimport SeatPassgerSelection from '../../components/SeatPassgerSelection';\r\nimport ButtonNextPrevious from '../../components/ButtonNextPrevious';\r\n\r\nexport interface StepSeatContainerProps{\r\n\r\n}\r\n\r\nconst StepSeatContainer:React.FC<StepSeatContainerProps> = (props) => {\r\n    const refSeat = React.useRef<any>(null)\r\n    const { cars, journeySeats, passengers, trajets, activeStep } = React.useContext(StepReservationContext);\r\n\r\n    const handleSelectPassenger = React.useCallback((e:any)=>{        \r\n        console.log(\"callback\", e);\r\n    },[]);\r\n\r\n    const handlerSubmit = React.useCallback(()=>{\r\n        console.log(\"cars///...........\", cars, refSeat)\r\n\r\n    }, [cars])\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"md\">\r\n                {cars && (\r\n                    <SeatPassgerSelection\r\n                        ref = { refSeat}\r\n                        users = { passengers }\r\n                        onSelectPlace = { handleSelectPassenger }\r\n                        clientActionButtonGroup = {\r\n                            <ButtonNextPrevious\r\n                                stepLenght ={5}\r\n                                currentStep={activeStep}\r\n                                goNext ={handlerSubmit}\r\n                                goPrivious ={handlerSubmit}\r\n                            />\r\n                        }\r\n                        config = {{\r\n                            trajets,\r\n                            selectedTrajet:[0,trajets.length],\r\n                            clipboard :cars.configCab.clipboard,\r\n                            devMod: false,\r\n                            x:cars.configCab.x,\r\n                            y: cars.configCab.y,\r\n                            reservations:{},\r\n                            precomposition: cars.configCab.seats.edges?.map((seat:any)=>{\r\n                            const {__typename, ...rest }  = seat.node;\r\n                            return rest\r\n                            })\r\n                        }}\r\n                    />\r\n                )}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StepSeatContainer;\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Statck from '@mui/material/Stack';\r\nimport TextField from '@mui/material/TextField';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Formik, FormikHelpers, FormikProps } from \"formik\";\r\nimport * as yup from 'yup';\r\n\r\n\r\nconst MESSAGE_REQUIRED = \"requie!\";\r\nconst ADRESS_REGEX = /^[a-z]+\\/[a-z]+\\/[a-z]+$/;\r\nconst DATE_REGEX = /^[0-9]+-[0-9]+-[0-9]+$/;\r\n\r\nexport interface DetailInfoInitialValue{\r\n    firstname :string;\r\n    middlename :string;\r\n    lastname :string;\r\n    email :string;\r\n    numTel :string;\r\n    numTelEmergency:string;\r\n    birthDay:string;\r\n    gender : \"F\"|\"H\"|\"I\";\r\n    degreParent ?:string;\r\n    pieceId:string;\r\n    numPieceId:string;\r\n    adressFrom :string;\r\n    adressTo :string;\r\n}\r\n\r\nexport type RefTypeDetailInfos = FormikProps<DetailInfoInitialValue>;\r\n\r\nexport interface DetailInfosProps{\r\n    initialValues ?: DetailInfoInitialValue;\r\n    onSubmit?: (values: DetailInfoInitialValue, formikHelpers: FormikHelpers<DetailInfoInitialValue>)=>void;\r\n}\r\n\r\n// schemas for validations...\r\nconst  schemasDetailInfoInitialValue = yup.object().shape({\r\n    firstname: yup.string().required(MESSAGE_REQUIRED),\r\n    middlename : yup.string().required(MESSAGE_REQUIRED),\r\n    lastname  :yup.string().required(MESSAGE_REQUIRED),\r\n    email:yup.string().email(\"email not valid\").required(MESSAGE_REQUIRED),\r\n    numTel: yup.string().required(MESSAGE_REQUIRED),\r\n    numTelEmergency : yup.string().required(MESSAGE_REQUIRED),\r\n    birthDay:yup.string().matches(\r\n        DATE_REGEX,\r\n        \"la date non valide, par ex. 2021-07-30\"\r\n    ).required(MESSAGE_REQUIRED),\r\n    degreParent: yup.string().required(MESSAGE_REQUIRED),\r\n    pieceId : yup.string().required(MESSAGE_REQUIRED),\r\n    numPieceId: yup.string().required(MESSAGE_REQUIRED),\r\n    adressFrom: yup.string().matches(\r\n        ADRESS_REGEX,\r\n        \"format no valide, veiller utiliser ce format! par ex. 23A/mitwaba/kenya\"\r\n    ).required(MESSAGE_REQUIRED),\r\n    adressTo: yup.string().matches(\r\n        ADRESS_REGEX,\r\n        \"format no valide, veiller utiliser ce format! par ex. 23A/mitwaba/kenya\"\r\n    ).required(MESSAGE_REQUIRED),\r\n    gender : yup.string().required(MESSAGE_REQUIRED),\r\n});\r\n\r\nconst DetailInfos = React.forwardRef<RefTypeDetailInfos,DetailInfosProps >(({onSubmit, initialValues}, ref) => {\r\n    // initial value populate by default\r\n    const _initialValues : DetailInfoInitialValue = React.useMemo(()=>{\r\n        return {\r\n            firstname:\"\",\r\n            middlename:\"\",\r\n            lastname:\"\",\r\n            email :\"\",\r\n            numTel:\"\",\r\n            numTelEmergency:\"\",\r\n            degreParent:\"\",\r\n            birthDay:\"\",\r\n            gender:\"H\",\r\n            pieceId:\"\",\r\n            numPieceId:\"\",\r\n            adressFrom:\"\",\r\n            adressTo:\"\",\r\n            ...initialValues,\r\n        }\r\n    },[initialValues]);\r\n\r\n    return (\r\n        <Box>\r\n            <Formik\r\n                validationSchema = { schemasDetailInfoInitialValue }\r\n                innerRef={ref}\r\n                initialValues = { _initialValues }\r\n                onSubmit = {(values, helpers)=>{\r\n                    onSubmit && onSubmit(values, helpers);\r\n                    console.log(values)\r\n                }}\r\n            >{({values, handleChange ,errors ,touched, handleSubmit})=>(\r\n                <Box \r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { mr: 1, mb : 2, width: '100%' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                    onSubmit = { handleSubmit }\r\n                >\r\n                    <Typography \r\n                        variant=\"subtitle2\"\r\n                        marginBottom={2}\r\n                    >Responsable*</Typography>\r\n                    <Statck flexDirection=\"row\">\r\n                        <TextField \r\n                            id=\"outlined-firstname\"\r\n                            name = \"firstname\"\r\n                            value = {values.firstname}\r\n                            label=\"Nom\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.firstname && touched.firstname)}\r\n                            helperText={errors.firstname}\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-middlename\"\r\n                            name = \"middlename\"\r\n                            value = {values.middlename}\r\n                            label=\"Postnom\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.middlename && touched.middlename)}\r\n                            helperText={errors.middlename}\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-middlename\"\r\n                            name = \"lastname\"\r\n                            value = {values.lastname}\r\n                            label=\"Prenom\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.lastname && touched.lastname)}\r\n                            helperText={errors.lastname}\r\n                        />\r\n                    </Statck>\r\n                    <Statck flexDirection=\"row\">\r\n                        <TextField \r\n                            id=\"outlined-degreParent\"\r\n                            name = \"degreParent\"\r\n                            value = {values.degreParent}\r\n                            label=\"Degre de parente\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.degreParent && touched.degreParent)}\r\n                            helperText={errors.degreParent}\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-birthDay\"\r\n                            name = \"birthDay\"\r\n                            value = {values.birthDay}\r\n                            label=\"Date de naissance\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.birthDay && touched.birthDay)}\r\n                            helperText={errors.birthDay}\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-gender\"\r\n                            name = \"gender\"\r\n                            value = {values.gender}\r\n                            label=\"Sexe\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.gender && touched.gender)}\r\n                            helperText={errors.gender}\r\n                        />\r\n                    </Statck>\r\n                    {/* contacts */}\r\n                    <Typography \r\n                        variant=\"subtitle2\"\r\n                        marginTop ={2}\r\n                        marginBottom={2}\r\n                    >Contactes*</Typography>\r\n                    <Statck flexDirection=\"row\">\r\n                        <TextField \r\n                            id=\"outlined-numTel\"\r\n                            name = \"numTel\"\r\n                            value = {values.numTel}\r\n                            label=\"Telephone\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.numTel && touched.numTel)}\r\n                            helperText={errors.numTel}\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-email\"\r\n                            name = \"email\"\r\n                            value = {values.email}\r\n                            label=\"Email\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.email && touched.email)}\r\n                            helperText={errors.email}\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-numTelEmergency\"\r\n                            name = \"numTelEmergency\"\r\n                            value = {values.numTelEmergency}\r\n                            label=\"Tel. en cas d'urgence\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.numTelEmergency && touched.numTelEmergency)}\r\n                            helperText={errors.numTelEmergency}\r\n                        />\r\n                    </Statck>\r\n                    {/* Piece d'identity */}\r\n                    <Typography \r\n                        variant=\"subtitle2\"\r\n                        marginTop ={2}\r\n                        marginBottom={2}\r\n                    >Piece d'identite*</Typography>\r\n                    <Statck flexDirection=\"row\">\r\n                        <TextField \r\n                            id=\"outlined-pieceId\"\r\n                            name = \"pieceId\"\r\n                            className = \"w100\"\r\n                            value = {values.pieceId}\r\n                            label=\"Type de piece d'identite\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.pieceId && touched.pieceId)}\r\n                            helperText={errors.pieceId}\r\n                        />\r\n                        <TextField\r\n                            className = \"w100\"\r\n                            id=\"outlined-numPieceId\"\r\n                            name = \"numPieceId\"\r\n                            value = {values.numPieceId}\r\n                            label=\"Numero de la pience\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.numPieceId && touched.numPieceId)}\r\n                            helperText={errors.numPieceId}\r\n                        />\r\n                    </Statck>\r\n                    {/* Adress... */}\r\n                    <Typography \r\n                        variant=\"subtitle2\"\r\n                        marginTop ={2}\r\n                        marginBottom={2}\r\n                    >Adresse*</Typography>\r\n                    <Statck flexDirection=\"row\">\r\n                        <TextField \r\n                            id=\"outlined-adressFrom\"\r\n                            name = \"adressFrom\"\r\n                            value = {values.adressFrom}\r\n                            label=\"Adress de depart\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.adressFrom && touched.adressFrom)}\r\n                            helperText={errors.adressFrom || \"par ex. no/rue/comune ou quartier\" }\r\n                        />\r\n                        <TextField \r\n                            id=\"outlined-adressTo\"\r\n                            name = \"adressTo\"\r\n                            value = {values.adressTo}\r\n                            label=\"Adress d'arrive\" \r\n                            variant=\"outlined\"\r\n                            size=\"small\" \r\n                            onChange= {handleChange}\r\n                            error = { Boolean(errors.adressTo && touched.adressTo)}\r\n                            helperText={errors.adressTo || \"par ex. no/rue/comune ou quartier\"}\r\n                        />\r\n                    </Statck>\r\n                </Box>\r\n            )}</Formik>\r\n        </Box>\r\n    )\r\n})\r\n\r\nexport default DetailInfos\r\n","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from \"@mui/material/Typography\";\r\nimport DetailInfos ,{ RefTypeDetailInfos, DetailInfoInitialValue } from '../../components/DetailInfos';\r\nimport CardCostDetail from '../../components/CardCostDetail';\r\nimport ButtonNextPrevious from '../../components/ButtonNextPrevious';\r\nimport { StepReservationContext } from './context-reservations';\r\nimport { useDetailInfoInputStepMutation } from '../../../../utils/apis/graphql/mutation';\r\n\r\ninterface StepInfoContainerProps{\r\n\r\n}\r\n\r\nconst StepInfoContainer = React.forwardRef<any, StepInfoContainerProps>((props, ref) => {\r\n    const {session,activeStep} = React.useContext(StepReservationContext);\r\n    const [handleSubmitMutation] = useDetailInfoInputStepMutation()\r\n    // refrence of detail input\r\n    const detailInputRef = React.useRef<RefTypeDetailInfos>(null);\r\n\r\n    const onSubmit = React.useCallback((e:DetailInfoInitialValue)=>{\r\n        const variables = { ...e, session, firstname:\"\"};\r\n        handleSubmitMutation({\r\n            variables\r\n        }).then(res=>{\r\n            console.log(\"res\", res.data)\r\n        })\r\n        .catch(err=>{\r\n            console.log(\"error\",err.networkError.result ,JSON.stringify(err))\r\n        })\r\n        console.log(variables)\r\n    },[handleSubmitMutation, session]);\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h4\" marginBottom ={2}>Adresse details</Typography>\r\n            <Typography variant=\"body2\" marginBottom ={2}>\r\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. \r\n                Blanditiis culpa excepturi delectus corporis, nobis, \r\n                error sit nisi modi eaque odit et officiis iste asperiores quo inventore aperiam. Nemo, ab voluptates!\r\n            </Typography>\r\n            <Grid container spacing={5}>\r\n                <Grid item xs={8}>\r\n                    <DetailInfos ref={detailInputRef} onSubmit = { onSubmit}  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <CardCostDetail items={[\r\n                        {\r\n                            label : \"adults\",\r\n                            value : \"234 usd\",\r\n                            description :\"23 adults pour deux trajet de kasungami\"\r\n                        },\r\n                        {\r\n                            label : \"enfants\",\r\n                            value : \"234 usd\",\r\n                            description :\"23 adults pour deux trajet de kasungami\"\r\n                        },\r\n                        {\r\n                            label :\"Total\",\r\n                            value :\"2345 usd\",\r\n                            divider : true\r\n                        }\r\n                    ]}/>\r\n                    <ButtonNextPrevious\r\n                        stepLenght ={5}\r\n                        currentStep = {activeStep}\r\n                        goNext = {()=>detailInputRef.current?.handleSubmit()}\r\n                        goPrivious ={()=>{}}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default React.memo(StepInfoContainer);\r\n","import React from 'react';\r\nimport Stepper from '@mui/material/Stepper';\r\nimport Step from '@mui/material/Step';\r\nimport StepLabel from '@mui/material/StepLabel';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container  from '@mui/material/Container';\r\nimport StepPassengerContainer from './StepPassengerContainer';\r\nimport StepPaymentContainer from './StepPaymentContainer';\r\nimport StepSeatContainer from './StepSeatContainer';\r\nimport StepInfoContainer from \"./StepInfoContainer\";\r\nimport { StepReservationContext } from \"./context-reservations\";\r\n\r\ndeclare type stepType = { label :string, ContainerComponent : React.ReactNode};\r\n\r\nconst STEPS : stepType[] = [\r\n  {\r\n    label :\"Passagers\",\r\n    ContainerComponent : <StepPassengerContainer />\r\n  },\r\n\r\n  {\r\n    label :\"Seats\",\r\n    ContainerComponent : <StepSeatContainer />\r\n  },\r\n\r\n  {\r\n    label :\"Detail Adress\",\r\n    ContainerComponent : <StepInfoContainer />\r\n  },\r\n  {\r\n    label :\"Payments\",\r\n    ContainerComponent : <StepPaymentContainer />\r\n  },\r\n]\r\n\r\ninterface StepContainerProps{\r\n}\r\n\r\nexport default function StepContainer(props:StepContainerProps) {\r\n  const { activeStep } = React.useContext(StepReservationContext);\r\n  const active = React.useMemo(()=>activeStep-1,[activeStep]);\r\n\r\n  const FrameComponent = React.useCallback(()=>{\r\n    if(STEPS.length > 0){\r\n      const component = STEPS[active];\r\n      if(component && component.ContainerComponent){\r\n        const ComponentElement = component.ContainerComponent;\r\n        return ComponentElement\r\n      }\r\n    }    \r\n    return (\r\n      <div>\r\n        <Typography>\r\n          Not Fram found\r\n        </Typography>\r\n      </div>\r\n    )\r\n  },[active]);\r\n\r\n  return (\r\n      <Container maxWidth=\"md\">\r\n        <Stepper activeStep={active} alternativeLabel>\r\n          {STEPS.map((item, index) => {\r\n              return (\r\n              <Step key={index}>\r\n                <StepLabel>{item.label}</StepLabel>\r\n              </Step>\r\n            );\r\n          })}\r\n        </Stepper>\r\n      <div style={{marginBottom : 30}} />\r\n        {active === STEPS.length ? (\r\n          <div>\r\n            <Typography>\r\n              All steps completed - you&apos;re finished\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            { FrameComponent() }\r\n          </div>\r\n        )}\r\n      </Container>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AboutCompany from '../containers/aboutCompany';\r\nimport StepContainer from \"../containers/stepRervations/StepContainer\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Container from '@material-ui/core/Container';\r\nimport {StepReservationProvider} from \"../containers/stepRervations/context-reservations\"\r\nimport FooterGlobal from '../containers/footers';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useDetailJourneySeleted } from '../../../utils/apis/graphql/queries';\r\nimport { LoadDetailSelectedJourneyType } from '../../../utils/apis/graphql/types';\r\n\r\ninterface StepReservationProps extends RouteComponentProps<{id:any}>{\r\n\r\n}\r\nconst StepReservation:React.FC<StepReservationProps> = (props) => {\r\n    const { data, loading, error } = useDetailJourneySeleted(props.match.params.id);\r\n    if(loading) return <div>Loading...</div>\r\n    if(error) return <div>error</div>\r\n    const { journeySelected }:{ journeySelected : LoadDetailSelectedJourneyType} = data;\r\n    console.log(\"selected\", journeySelected?.journey)\r\n    return (\r\n        <>\r\n            <Toolbar />\r\n            \r\n            <StepReservationProvider value ={{\r\n                adult : data.journeySelected.numberAdult,\r\n                child : data.journeySelected.numberChild,\r\n                baby : data.journeySelected.numberBaby,\r\n                session :data.journeySelected.session.key,\r\n                id : data.journeySelected.id,\r\n                activeStep : data.journeySelected.lastStep,\r\n                lastStep : data.journeySelected.lastStep,\r\n                passengers : journeySelected?.passengers.edges?.map(psg=>psg.node),\r\n                cars : journeySelected?.journey.cars,\r\n                trajets : journeySelected.journey.trajets\r\n            }}>\r\n                <StepContainer />\r\n            </StepReservationProvider>\r\n            <Container maxWidth=\"md\">\r\n                <AboutCompany />               \r\n            </Container>\r\n            <FooterGlobal />         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default StepReservation;","import { useEffect, useState } from \"react\";\r\nimport { apis, JOURNEY_URL } from \"../config\"\r\n\r\nexport const fetcher = (url:any)=> apis.get(url).then(res => res.data)\r\nexport const fetcherWithParams = (url:any, params?:any)=>apis.get(url, params).then(res => res.data)\r\n\r\nexport const useWithloader = ()=>{\r\n    return  useState<{\r\n        data?:any,\r\n        isLoading: boolean,\r\n        isError?:any,\r\n    }>({\r\n        data:null,\r\n        isLoading: false,\r\n        isError: null\r\n    });\r\n}\r\nexport const useSearchJourney = (params:object)=>{\r\n    const [result, setResult] = useWithloader();\r\n    useEffect(()=>{\r\n        setResult(state=>({...state, isLoading:true}))\r\n        apis.get(JOURNEY_URL,{params}).then(res=>{\r\n            setResult(state=>({...state, data:res.data, isLoading:false}))\r\n        }).catch(error=>{\r\n            setResult(state=>({...state, isError:error,isLoading:false}))\r\n        })\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[])\r\n    \r\n    return result;\r\n}","import React from 'react';\r\nimport VoyagesListView from '../containers/voyages';\r\nimport Container from '@material-ui/core/Container'\r\nimport AboutCompany from '../containers/aboutCompany';\r\nimport FooterGlobal from '../containers/footers';\r\nimport Querystr from \"query-string\";\r\nimport { useLocation} from 'react-router-dom';\r\nimport { useSearchJourney } from '../providers/utils';\r\n\r\nconst SearchResultJjourney = () => {\r\n    const params = useLocation();\r\n    const { data, isLoading, isError } = useSearchJourney(Querystr.parse(params.search))\r\n    console.log( data, isLoading, isError);\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"md\" style={{marginTop : 20}}>\r\n                { data && (\r\n                    <VoyagesListView \r\n                        // title = {company?.nom}\r\n                        voyages={data.results}\r\n                    />)\r\n                }\r\n                <AboutCompany />            \r\n            </Container>\r\n            <FooterGlobal />  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchResultJjourney;\r\n","import * as React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport { SWRConfig } from 'swr'\r\nimport { AppStateProvider, ThemeClientProvider } from \"../providers\";\r\nimport Withappbar from \"../containers/withappbar\";\r\n\r\nimport Home from \"./Home\";\r\nimport DetailPage from \"./Detail\";\r\nimport SteperReservation from \"./StepReservation\";\r\nimport SearchResultJjourney from \"./SearchResultJjourney\";\r\nimport { apis } from \"../config\";\r\n\r\nconst fetcher = (url:any)=> apis.get(url).then(res => res.data)\r\n\r\nexport const CLientApp = ()=>{\r\n    return (\r\n        <AppStateProvider>\r\n            <ThemeClientProvider>\r\n                <SWRConfig value={{fetcher, refreshInterval:100000}}>\r\n                    <Router>\r\n                        <Withappbar>\r\n                            <div>\r\n                                <Switch>\r\n                                    <Route path=\"/\" exact component={Home} />\r\n                                    <Route path=\"/j/:id\" exact component={DetailPage} />\r\n                                    <Route path=\"/search\" exact component={SearchResultJjourney} />\r\n                                    <Route path=\"/res/:id\" exact component={SteperReservation} />\r\n                                </Switch>\r\n                            </div>\r\n                        </Withappbar>                \r\n                    </Router>\r\n                </SWRConfig>\r\n            </ThemeClientProvider>\r\n        </AppStateProvider>\r\n    )\r\n}","import React from 'react';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\n\r\n/**\r\n * DateProvider Component is the provider of Date and DateTime picker\r\n *\r\n * @param {*} props\r\n * @returns\r\n */\r\n\r\nconst DateProvider:React.FC = (props) => {\r\n    \r\n    return (\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>{props?.children}</MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default DateProvider\r\n","import {\r\n    ApolloClient,\r\n    InMemoryCache\r\n} from \"@apollo/client\";\r\n\r\nexport const BASE_URL = \"https://ttm-apis.herokuapp.com/\";\r\n\r\nexport const apolloClient = new ApolloClient({\r\n    uri: BASE_URL+\"graphql/\",\r\n    cache: new InMemoryCache()\r\n});","import React, { Component } from 'react'\r\nimport {\r\n    ApolloProvider as App\r\n} from \"@apollo/client\";\r\n\r\nimport { apolloClient} from \"../config\";\r\n\r\nexport class ApolloProvider extends Component {\r\n    render() {\r\n        return (\r\n            <App client={apolloClient}>{this.props.children}</App>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ApolloProvider;\r\n","import React from 'react';\nimport { CLientApp } from './apps/clients/pages/Index';\nimport DateProvider from \"./utils/provider/DateProvider\"\nimport ApolloProvider from './utils/provider/ApolloProvider';\n\nfunction App() {\n  return (\n    <ApolloProvider>\n      <DateProvider>\n        <CLientApp />\n      </DateProvider>\n    </ApolloProvider>   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","\r\nimport * as React from 'react';\r\nimport { dataPrecomposion, CabineConfigurationInterface, SeatsInterface, Actions } from \"./type\";\r\nimport { getDecomposition, getComp  } from \"../core/funct\"\r\n\r\n// defaultValue\r\nexport const intialStateSeatConfiguration: CabineConfigurationInterface = {\r\n    dispatcher : (e)=>{\r\n        console.log(e)\r\n    },\r\n    clipboard: \"SEAT\",\r\n    defaultReservation: {\r\n    },\r\n    precomposition: [],\r\n    devMod: false,\r\n    reservations: {\r\n        \"71\": [\r\n            {\r\n                user: \"3456io\",\r\n                trajet:[0,2] \r\n            }\r\n        ]\r\n    },\r\n    selectedTrajet:[],\r\n    trajets :[], \r\n    x: 0,\r\n    y: 0\r\n}\r\nexport const SeatConfigContext = React.createContext<CabineConfigurationInterface>(intialStateSeatConfiguration)\r\n\r\n// function reducer\r\nexport function SeatConfigReducer(state: CabineConfigurationInterface, action: Actions) {\r\n    console.log(state, action);\r\n    switch (action.type) {\r\n        case \"handlerInit\":\r\n            const precomposition = getDecomposition(action.payload.precomposition, action.payload.y)\r\n            // const d = getComp(action.payload.precomposition)\r\n            // console.log(\"handlerInit\", precomposition, d);\r\n            return { ...state, ...action.payload, precomposition };\r\n        case \"handlerChangeModDev\":\r\n            return { ...state, devMod: action.payload };\r\n        case \"handlerChangeSelectTrajet\":\r\n            return {\r\n                ...state,\r\n                selectedTrajet: action.payload\r\n            }\r\n        case \"handlerSetTrajet\":\r\n            return {\r\n                ...state,\r\n                trajets: action.payload\r\n            }\r\n        case \"handlerChangeX\":\r\n            return { ...state, x: action.payload };\r\n        case \"handlerChangeY\":\r\n            return { ...state, y: action.payload };\r\n        case \"handlerReserve\":\r\n            return addReservations(state, action.payload);\r\n        case \"handlerUnreserve\":\r\n            return removeReservations(state, action.payload);\r\n        case \"handlerDefaultReserve\":\r\n            return addReservations(state, action.payload);\r\n        case \"handlerDefaultUnreserve\":\r\n            return removeReservations(state, action.payload);\r\n        case \"handlerChangeClipboard\":\r\n            return { ...state, clipboard: action.payload };\r\n        case \"handlerPrecompose\":\r\n            return { ...state, precomposition: precompose(state.x, state.y) };\r\n        case \"handlerChangeType\":\r\n            return { ...state, precomposition: onChangeTypeOfSeat(state.precomposition, action.payload) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nfunction addReservations(state:CabineConfigurationInterface, payload :any ) :  CabineConfigurationInterface {\r\n    const {user, seat} = payload;\r\n    const newReservationUser = {trajet: state.selectedTrajet, user}\r\n    const reservations = {\r\n        ...state.reservations,\r\n        [seat] : state.reservations[seat] ? [ newReservationUser, ...state.reservations[seat]] : [newReservationUser ]\r\n    }\r\n    return { ...state, reservations}\r\n}\r\n\r\nfunction removeReservations(state:CabineConfigurationInterface, payload :any ) :  CabineConfigurationInterface {\r\n    \r\n    return { ...state, }\r\n}\r\n\r\nfunction precompose(x: string | number, y: string | number): dataPrecomposion[] {\r\n    let col: dataPrecomposion[] = []\r\n    for (let i = 0; i < y; i++) {\r\n        let line: SeatsInterface[] = []\r\n        for (let j = 0; j < x; j++) { line.push(getSeat(j.toString(), i.toString())); }\r\n        col.push({ id: i, data: line });\r\n    }\r\n    return col;\r\n}\r\n\r\nfunction getSeat(x: string, y: string): SeatsInterface {\r\n    const name = `${x}-${y}`;\r\n    let data: SeatsInterface = { id: name, idConfigCab: \"\", type: \"SEAT\", x: parseInt(x), y: parseInt(y), name }\r\n    return data;\r\n}\r\n\r\nfunction onChangeTypeOfSeat(precomposition: dataPrecomposion[], seat: SeatsInterface): dataPrecomposion[] {\r\n    return precomposition.map(i => {\r\n        if (i.id === seat.y) {\r\n            return {\r\n                id: i.id,\r\n                data: i.data.map(seatObject => seatObject.id === seat.id ? seat : seatObject)\r\n            }\r\n        } else {\r\n            return i\r\n        }\r\n    })\r\n}","import * as React from 'react';\r\nimport Button, { ButtonProps } from '@mui/material/Button';\r\nimport EventSeatIcon from '@mui/icons-material/EventSeat';\r\nimport SpaceBarIcon from '@mui/icons-material/SpaceBar';\r\n\r\nimport { SeatsInterface } from '../../core/type';\r\n\r\n\r\nexport interface SeatPlaceProps extends ButtonProps{\r\n    modeDev : boolean,\r\n    info ?: SeatsInterface,\r\n    onPress ?: (e ?: SeatsInterface)=>void\r\n}\r\n\r\n\r\nconst SeatPlace = React.forwardRef<any, SeatPlaceProps>(({modeDev,onPress, ...props}, ref) => {\r\n    const info = props.info;\r\n    const classesVariant = React.useMemo(()=>{\r\n        return modeDev ? \"outlined\" : (\r\n            info?.type === \"SEAT\" ? \"contained\" : \"text\"\r\n        )\r\n    },[info?.type, modeDev])\r\n\r\n    const handlerClick = React.useCallback(()=>onPress && onPress(info),[info, onPress])\r\n    return (\r\n        <Button \r\n            {...props}\r\n            onClick = {handlerClick}\r\n            variant = { classesVariant }\r\n            size = \"large\"\r\n            disableElevation\r\n        >      \r\n            {\r\n                info?.type === \"SEAT\" ? <EventSeatIcon /> :(\r\n                    modeDev ? <SpaceBarIcon /> : null\r\n                )\r\n                \r\n            }\r\n        </Button>\r\n    )\r\n})\r\n\r\nexport default React.memo(SeatPlace);"],"sourceRoot":""}